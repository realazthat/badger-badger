{"mappings":"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","sources":["<anon>","app.js"],"sourcesContent":["// For semistandard.\n/* global FileReader */ /* global Image */ /* global Blob */ /* global URL */ /* global XMLSerializer */ function ClearCircle({ x, y, radius, ctx }) {\n    // ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.globalCompositeOperation = \"source-over\";\n}\nfunction FillCircle({ x, y, radius, color, ctx }) {\n    console.log(`FillCircle().x: ${x}, y: ${y}, radius: ${radius}, color: ${color}`);\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n}\nfunction DrawImage({ canvas, img, imgSize, u, v, radiusU, borderU, fontSizeU, offsetU, offsetV }) {\n    const ctx /*: CanvasRenderingContext2D */  = canvas.getContext(\"2d\");\n    canvas.width = imgSize;\n    canvas.height = imgSize;\n    ctx.drawImage(img, 0, 0);\n    ClearCircle({\n        x: u * imgSize,\n        y: v * imgSize,\n        radius: (radiusU + borderU) * imgSize,\n        ctx\n    });\n    FillCircle({\n        x: u * imgSize,\n        y: v * imgSize,\n        radius: radiusU * imgSize,\n        color: \"red\",\n        ctx\n    });\n    // Add number to the badge,\n    const textSizePX = fontSizeU * imgSize;\n    ctx.fillStyle = \"white\";\n    ctx.font = `700 ${textSizePX}px \"gg sans\", \"Noto Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`;\n    const text = document.getElementById(\"badge-text\").value;\n    const metrics = ctx.measureText(text);\n    const textWidth = metrics.width;\n    const textHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const method = \"centering\";\n    if (method === \"centering\") {\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n    }\n    let centerX = u * imgSize;\n    centerX += offsetU * imgSize;\n    let centerY = v * imgSize;\n    centerY += offsetV * imgSize;\n    if (method === \"metrics\") {\n        centerX -= textWidth / 2;\n        centerY += textHeight / 2;\n    }\n    ctx.fillText(text, centerX, centerY);\n    canvas.style.display = \"block\";\n}\nfunction DrawImageOverlay({ canvas, img }) {\n    const ctx /*: CanvasRenderingContext2D */  = canvas.getContext(\"2d\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    ctx.globalAlpha = 0.5;\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    canvas.style.display = \"block\";\n}\n// DO NOT SUBMIT\n// function DrawOutlineOverlay ({ canvas, imgSize, alpha, roundness }) {\n//   const ctx /*: CanvasRenderingContext2D */= canvas.getContext('2d');\n//   canvas.width = imgSize;\n//   canvas.height = imgSize;\n//   ctx.globalAlpha = alpha;\n//   ctx.fillStyle = 'rgba(54, 57, 63)';\n//   ctx.beginPath();\n//   ctx.moveTo(0, 0);\n//   ctx.lineTo(imgSize, 0);\n//   ctx.lineTo(imgSize, imgSize);\n//   ctx.lineTo(0, imgSize);\n//   ctx.closePath();\n//   ctx.fill();\n//   ctx.globalAlpha = 1;\n//   canvas.style.display = 'block';\n// }\nfunction DrawOutlineOverlay({ canvas, imgSize, alpha, roundness }) {\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = imgSize;\n    canvas.height = imgSize;\n    // Fill the background with semitransparent color\n    ctx.fillStyle = `rgba(54, 57, 63, ${alpha})`;\n    ctx.fillRect(0, 0, imgSize, imgSize);\n    // Set composite operation for transparent cut-out\n    ctx.globalCompositeOperation = \"destination-out\";\n    // Calculate radius for rounded corners\n    const radius = imgSize / 2 * roundness;\n    const fullCircle = roundness === 1;\n    if (!fullCircle) {\n        // Draw path for rounded rectangle\n        ctx.beginPath();\n        ctx.moveTo(radius, 0);\n        ctx.lineTo(imgSize - radius, 0);\n        ctx.arc(imgSize - radius, radius, radius, 1.5 * Math.PI, 2 * Math.PI);\n        ctx.lineTo(imgSize, imgSize - radius);\n        ctx.arc(imgSize - radius, imgSize - radius, radius, 0, 0.5 * Math.PI);\n        ctx.lineTo(radius, imgSize);\n        ctx.arc(radius, imgSize - radius, radius, 0.5 * Math.PI, Math.PI);\n        ctx.lineTo(0, radius);\n        ctx.arc(radius, radius, radius, Math.PI, 1.5 * Math.PI);\n        ctx.closePath();\n    } else {\n        // Draw a circle for roundness = 1\n        ctx.beginPath();\n        ctx.arc(imgSize / 2, imgSize / 2, radius, 0, 2 * Math.PI);\n    }\n    ctx.fillStyle = \"rgba(255, 255, 255, 1)\";\n    ctx.fill();\n    // Reset composite operation to default\n    ctx.globalCompositeOperation = \"source-over\";\n    // Optional: Display the canvas again\n    canvas.style.display = \"block\";\n}\nfunction SVGDrawImage({ svg/*: SVGElement */ , svgSize, img/*: Image */ , u, v, fontSizeU, offsetU, offsetV, radius, border }) {\n    // Create mask:\n    const mask = document.createElementNS(\"http://www.w3.org/2000/svg\", \"mask\");\n    mask.setAttribute(\"id\", \"image-mask\");\n    // Mask's full-opacity rectangle:\n    const maskRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    maskRect.setAttribute(\"x\", \"0\");\n    maskRect.setAttribute(\"y\", \"0\");\n    maskRect.setAttribute(\"width\", \"100%\");\n    maskRect.setAttribute(\"height\", \"100%\");\n    maskRect.setAttribute(\"fill\", \"white\");\n    mask.appendChild(maskRect);\n    // Mask's transparent circle:\n    const maskCircle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    maskCircle.setAttribute(\"cx\", u * svgSize);\n    maskCircle.setAttribute(\"cy\", v * svgSize);\n    maskCircle.setAttribute(\"r\", (radius + border) * svgSize);\n    maskCircle.setAttribute(\"fill\", \"black\");\n    mask.appendChild(maskCircle);\n    svg.appendChild(mask);\n    // Draw the image with mask applied:\n    const image = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n    image.setAttribute(\"x\", \"0\");\n    image.setAttribute(\"y\", \"0\");\n    image.setAttribute(\"width\", \"100%\");\n    image.setAttribute(\"height\", \"100%\");\n    image.setAttribute(\"href\", img.src);\n    image.setAttribute(\"mask\", \"url(#image-mask)\");\n    svg.appendChild(image);\n    const circle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    circle.setAttribute(\"cx\", u * svgSize);\n    circle.setAttribute(\"cy\", v * svgSize);\n    circle.setAttribute(\"r\", radius * svgSize);\n    // Set color\n    circle.setAttribute(\"fill\", \"red\");\n    svg.appendChild(circle);\n    // Add number to the badge,\n    const text = document.getElementById(\"badge-text\").value;\n    const textSizePX = fontSizeU * svgSize;\n    const textX = u * svgSize + offsetU * svgSize;\n    let textY = v * svgSize + offsetV * svgSize;\n    textY += radius / 2 * svgSize;\n    const textElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    textElement.setAttribute(\"x\", textX);\n    textElement.setAttribute(\"y\", textY);\n    textElement.setAttribute(\"fill\", \"white\");\n    textElement.setAttribute(\"text-anchor\", \"middle\");\n    // textElement.setAttribute('dominant-baseline', 'middle');\n    // textElement.setAttribute('alignment-baseline', 'middle');\n    // textElement.setAttribute('alignment-baseline', 'central');\n    // textElement.setAttribute('alignment-baseline', 'mathematical ');\n    textElement.setAttribute(\"vertical-align\", \"middle\");\n    textElement.setAttribute(\"font-size\", `${textSizePX}px`);\n    textElement.setAttribute(\"font-weight\", \"700\");\n    textElement.setAttribute(\"font-family\", '\"gg sans\", \"Noto Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif');\n    textElement.textContent = text;\n    svg.appendChild(textElement);\n    svg.style.display = \"block\";\n}\nfunction ClearSVG({ svg }) {\n    while(svg.firstChild)svg.removeChild(svg.firstChild);\n}\nfunction SVGDrawImageOverlay({ svg, img, alpha }) {\n    // Draw the image:\n    const image = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n    image.setAttribute(\"x\", \"0\");\n    image.setAttribute(\"y\", \"0\");\n    image.setAttribute(\"width\", \"100%\");\n    image.setAttribute(\"height\", \"100%\");\n    image.setAttribute(\"href\", img.src);\n    // Set alpha\n    image.setAttribute(\"opacity\", alpha);\n    svg.appendChild(image);\n}\nfunction SVGDrawOutlineOverlay({ svg, svgSize, alpha, roundness }) {\n    const mask = document.createElementNS(\"http://www.w3.org/2000/svg\", \"mask\");\n    mask.setAttribute(\"id\", \"outline-overlay-image-mask\");\n    // Mask's full-opacity rectangle:\n    const visibleRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    visibleRect.setAttribute(\"x\", \"0\");\n    visibleRect.setAttribute(\"y\", \"0\");\n    visibleRect.setAttribute(\"width\", \"100%\");\n    visibleRect.setAttribute(\"height\", \"100%\");\n    visibleRect.setAttribute(\"fill\", \"white\");\n    mask.appendChild(visibleRect);\n    const transparentRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    transparentRect.setAttribute(\"x\", \"0\");\n    transparentRect.setAttribute(\"y\", \"0\");\n    transparentRect.setAttribute(\"width\", \"100%\");\n    transparentRect.setAttribute(\"height\", \"100%\");\n    transparentRect.setAttribute(\"fill\", \"black\");\n    // Add corner radius\n    transparentRect.setAttribute(\"rx\", `${roundness * svgSize / 2}px`);\n    transparentRect.setAttribute(\"ry\", `${roundness * svgSize / 2}px`);\n    mask.appendChild(transparentRect);\n    svg.appendChild(mask);\n    // Draw a rect with the mask applied\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    rect.setAttribute(\"x\", \"0\");\n    rect.setAttribute(\"y\", \"0\");\n    rect.setAttribute(\"opacity\", alpha);\n    rect.setAttribute(\"width\", \"100%\");\n    rect.setAttribute(\"height\", \"100%\");\n    rect.setAttribute(\"fill\", \"rgba(54, 57, 63)\");\n    rect.setAttribute(\"mask\", \"url(#outline-overlay-image-mask)\");\n    svg.appendChild(rect);\n}\nclass State {\n    constructor(){\n        this.mainImage = new Image();\n        this.overlayImage = new Image();\n        this._outlineRoundness = 0;\n        this._u = 0;\n        this._v = 0;\n        this._normalizedRadius = 0;\n        this._normalizedBorder = 0;\n        this._badgeText = \"1\";\n        this._normalizedFontSize = 0;\n        this._uTextOffset = 0;\n        this._vTextOffset = 0;\n        this.dirty = false;\n    }\n    GetImageWH() {\n        return {\n            w: this.mainImage.width,\n            h: this.mainImage.height\n        };\n    }\n    _RedrawEverything() {\n        const canvas = document.getElementById(\"canvas\");\n        canvas.style.display = \"block\";\n        DrawImage({\n            canvas,\n            img: this.mainImage,\n            imgSize: this.mainImage.width,\n            u: this.u,\n            v: this.v,\n            fontSizeU: this.normalizedFontSize,\n            offsetU: this.uTextOffset,\n            offsetV: this.vTextOffset,\n            radiusU: this.normalizedRadius,\n            borderU: this.normalizedBorder\n        });\n        const canvasOverlay = document.getElementById(\"canvas-overlay\");\n        canvasOverlay.style.display = \"block\";\n        DrawImageOverlay({\n            canvas: canvasOverlay,\n            img: this.overlayImage\n        });\n        DrawOutlineOverlay({\n            canvas: canvasOverlay,\n            imgSize: this.mainImage.width,\n            alpha: 0.5,\n            roundness: this.outlineRoundness\n        });\n        const svg = document.getElementById(\"svg\");\n        svg.style.display = \"block\";\n        svg.setAttribute(\"width\", 256);\n        svg.setAttribute(\"height\", 256);\n        ClearSVG({\n            svg\n        });\n        SVGDrawImage({\n            svg,\n            svgSize: 256,\n            img: this.mainImage,\n            u: this.u,\n            v: this.v,\n            fontSizeU: this.normalizedFontSize,\n            offsetU: this.uTextOffset,\n            offsetV: this.vTextOffset,\n            radius: this.normalizedRadius,\n            border: this.normalizedBorder\n        });\n        const svgOverlay = document.getElementById(\"svg-overlay\");\n        svgOverlay.style.display = \"block\";\n        ClearSVG({\n            svg: svgOverlay\n        });\n        SVGDrawImageOverlay({\n            svg: svgOverlay,\n            img: this.overlayImage,\n            alpha: 0.5\n        });\n        SVGDrawOutlineOverlay({\n            svg: svgOverlay,\n            svgSize: 256,\n            alpha: 0.5,\n            roundness: this.outlineRoundness\n        });\n        console.log(`_RedrawEverything().x: ${this.x}, y: ${this.y}, u: ${this.u}, v: ${this.v}`);\n        const mainImage = this.mainImage;\n        function SetOrDisable(id, value) {\n            if (mainImage.width === 0) {\n                document.getElementById(id).value = \"0\";\n                document.getElementById(id).disabled = true;\n            } else {\n                document.getElementById(id).value = value;\n                document.getElementById(id).disabled = false;\n            }\n        }\n        document.getElementById(\"outline-overlay-roundness\").value = this.outlineRoundness;\n        SetOrDisable(\"x\", this.x);\n        SetOrDisable(\"y\", this.y);\n        document.getElementById(\"u\").value = this.u;\n        document.getElementById(\"v\").value = this.v;\n        document.getElementById(\"normalized-radius\").value = this.normalizedRadius;\n        document.getElementById(\"normalized-border\").value = this.normalizedBorder;\n        SetOrDisable(\"pixel-radius\", this.pixelRadius);\n        SetOrDisable(\"pixel-border\", this.pixelBorder);\n        document.getElementById(\"badge-text\").value = this.badgeText;\n        document.getElementById(\"normalized-font-size\").value = this.normalizedFontSize;\n        document.getElementById(\"normalized-offset-u\").value = this.uTextOffset;\n        document.getElementById(\"normalized-offset-v\").value = this.vTextOffset;\n        SetOrDisable(\"pixel-font-size\", this.pixelFontSize);\n        SetOrDisable(\"pixel-offset-x\", this.xTextOffset);\n        SetOrDisable(\"pixel-offset-y\", this.yTextOffset);\n        console.log(this);\n    }\n    MarkDirty() {\n        if (this.dirty) return;\n        this.dirty = true;\n        // Since the image size might have changed, recompute all the computed values that depends on the image size.\n        this.u = 1.0 * this.u;\n        this.v = 1.0 * this.v;\n        this.normalizedRadius = 1.0 * this.normalizedRadius;\n        this.normalizedBorder = 1.0 * this.normalizedBorder;\n        setTimeout(()=>{\n            this._RedrawEverything();\n            this.dirty = false;\n        }, 0);\n    }\n    set x(value) {\n        this._u = value / this.GetImageWH().w;\n    }\n    get x() {\n        return this._u * this.GetImageWH().w;\n    }\n    set y(value) {\n        this._v = value / this.GetImageWH().h;\n    }\n    get y() {\n        return this._v * this.GetImageWH().h;\n    }\n    set u(value) {\n        this._u = value;\n    }\n    get u() {\n        return this._u;\n    }\n    set v(value) {\n        this._v = value;\n    }\n    get v() {\n        return this._v;\n    }\n    set pixelRadius(value) {\n        this._normalizedRadius = value / this.GetImageWH().w;\n    }\n    get pixelRadius() {\n        return this._normalizedRadius * this.GetImageWH().w;\n    }\n    set normalizedRadius(value) {\n        this._normalizedRadius = value;\n    }\n    get normalizedRadius() {\n        return this._normalizedRadius;\n    }\n    set pixelBorder(value) {\n        this._normalizedBorder = value / this.GetImageWH().w;\n    }\n    get pixelBorder() {\n        return this._normalizedBorder * this.GetImageWH().w;\n    }\n    set normalizedBorder(value) {\n        this._normalizedBorder = value;\n    }\n    get normalizedBorder() {\n        return this._normalizedBorder;\n    }\n    set badgeText(value) {\n        this._badgeText = value;\n    }\n    get badgeText() {\n        return this._badgeText;\n    }\n    set normalizedFontSize(value) {\n        this._normalizedFontSize = value;\n    }\n    get normalizedFontSize() {\n        return this._normalizedFontSize;\n    }\n    set pixelFontSize(value) {\n        this._normalizedFontSize = value / this.GetImageWH().w;\n    }\n    get pixelFontSize() {\n        return this._normalizedFontSize * this.GetImageWH().w;\n    }\n    set uTextOffset(value) {\n        this._uTextOffset = value;\n    }\n    get uTextOffset() {\n        return this._uTextOffset;\n    }\n    set xTextOffset(value) {\n        this._uTextOffset = value / this.GetImageWH().w;\n    }\n    get xTextOffset() {\n        return this._uTextOffset * this.GetImageWH().w;\n    }\n    set vTextOffset(value) {\n        this._vTextOffset = value;\n    }\n    get vTextOffset() {\n        return this._vTextOffset;\n    }\n    set yTextOffset(value) {\n        this._vTextOffset = value / this.GetImageWH().h;\n    }\n    get yTextOffset() {\n        return this._vTextOffset * this.GetImageWH().h;\n    }\n    set outlineRoundness(value) {\n        this._outlineRoundness = value;\n    }\n    get outlineRoundness() {\n        return this._outlineRoundness;\n    }\n}\nasync function LoadImageAsBlob(imageElement) {\n    return new Promise((resolve, reject)=>{\n        // Define the processImage function to be used in the load event listener\n        const processImage = ()=>{\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = imageElement.width;\n            canvas.height = imageElement.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(imageElement, 0, 0, canvas.width, canvas.height);\n            canvas.toBlob((blob)=>{\n                resolve(blob);\n            }, \"image/png\");\n            // Clean up: Remove the event listener after processing the image\n            imageElement.removeEventListener(\"load\", processImage);\n            imageElement.removeEventListener(\"error\", handleError);\n        };\n        // Define the handleError function to be used in the error event listener\n        const handleError = (error)=>{\n            reject(error);\n            // Clean up: Remove the event listener if there's an error\n            imageElement.removeEventListener(\"load\", processImage);\n            imageElement.removeEventListener(\"error\", handleError);\n        };\n        if (imageElement.complete && imageElement.naturalHeight !== 0) // If the image is already loaded, process it immediately\n        processImage();\n        else {\n            // If the image is not yet loaded, wait for it to load\n            imageElement.addEventListener(\"load\", processImage);\n            imageElement.addEventListener(\"error\", handleError);\n        }\n    });\n}\n/// /////////////////////////////////////////////////////////////////////////////\nwindow.badgerState = new State();\n/// /////////////////////////////////////////////////////////////////////////////\ndocument.getElementById(\"upload-image\").addEventListener(\"change\", function(e) {\n    const reader = new FileReader();\n    reader.onload = function(event) {\n        window.badgerState.mainImage.onload = function() {\n            window.badgerState.MarkDirty();\n        };\n        window.badgerState.mainImage.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n});\ndocument.getElementById(\"upload-image-overlay\").addEventListener(\"change\", function(e) {\n    const reader = new FileReader();\n    reader.onload = function(event) {\n        window.badgerState.overlayImage.onload = function() {\n            window.badgerState.MarkDirty();\n        };\n        window.badgerState.overlayImage.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n});\ndocument.getElementById(\"sample-server-pfp\").addEventListener(\"onload\", function(e) {\n    window.badgerState.mainImage.onload = function() {\n        window.badgerState.MarkDirty();\n    };\n    window.badgerState.mainImage.src = e.target.src;\n});\ndocument.getElementById(\"sample-server-pfp\").addEventListener(\"onload\", function(e) {\n    window.badgerState.mainImage.onload = function() {\n        window.badgerState.MarkDirty();\n    };\n    window.badgerState.mainImage.src = e.target.src;\n});\ndocument.getElementById(\"download-image\").addEventListener(\"click\", function(e) {\n    const canvas = document.getElementById(\"canvas\");\n    const image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    const link = document.createElement(\"a\");\n    link.download = \"badger-badger-pfp.png\";\n    link.href = image;\n    link.click();\n});\ndocument.getElementById(\"download-svg\").addEventListener(\"click\", function(e) {\n    const svg = document.getElementById(\"svg\");\n    const svgData = new XMLSerializer().serializeToString(svg);\n    const blob = new Blob([\n        svgData\n    ], {\n        type: \"image/svg+xml\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.download = \"badger-badger-pfp.svg\";\n    link.href = url;\n    link.click();\n    URL.revokeObjectURL(url);\n});\ndocument.getElementById(\"download-svg-as-png\").addEventListener(\"click\", function(e) {\n    const svg = document.getElementById(\"svg\");\n    const svgData = new XMLSerializer().serializeToString(svg);\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 256;\n    canvas.height = 256;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = function() {\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        const image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n        const link = document.createElement(\"a\");\n        link.download = \"badger-badger-pfp-svg.png\";\n        link.href = image;\n        link.click();\n    };\n    img.src = \"data:image/svg+xml;base64,\" + btoa(svgData);\n});\n/// /////////////////////////////////////////////////////////////////////////////\nfor (const eventName of [\n    \"input\",\n    \"change\"\n]){\n    document.getElementById(\"x\").addEventListener(eventName, function(e) {\n        window.badgerState.x = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"y\").addEventListener(eventName, function(e) {\n        window.badgerState.y = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"u\").addEventListener(eventName, function(e) {\n        window.badgerState.u = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"v\").addEventListener(eventName, function(e) {\n        window.badgerState.v = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"pixel-radius\").addEventListener(eventName, function(e) {\n        window.badgerState.pixelRadius = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"normalized-radius\").addEventListener(eventName, function(e) {\n        window.badgerState.normalizedRadius = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"pixel-border\").addEventListener(eventName, function(e) {\n        window.badgerState.pixelBorder = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"normalized-border\").addEventListener(eventName, function(e) {\n        window.badgerState.normalizedBorder = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"badge-text\").addEventListener(eventName, function(e) {\n        window.badgerState.badgeText = e.target.value;\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"pixel-font-size\").addEventListener(eventName, function(e) {\n        window.badgerState.pixelFontSize = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"normalized-font-size\").addEventListener(eventName, function(e) {\n        window.badgerState.normalizedFontSize = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"pixel-offset-x\").addEventListener(eventName, function(e) {\n        window.badgerState.xTextOffset = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"normalized-offset-u\").addEventListener(eventName, function(e) {\n        window.badgerState.uTextOffset = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"pixel-offset-y\").addEventListener(eventName, function(e) {\n        window.badgerState.yTextOffset = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"normalized-offset-v\").addEventListener(eventName, function(e) {\n        window.badgerState.vTextOffset = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"outline-overlay-roundness\").addEventListener(eventName, function(e) {\n        window.badgerState.outlineRoundness = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n}\n/// /////////////////////////////////////////////////////////////////////////////\ndocument.getElementById(\"outline-overlay-roundness-server-default\").addEventListener(\"click\", function(e) {\n    window.badgerState.outlineRoundness = 0.66;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"outline-overlay-roundness-user-default\").addEventListener(\"click\", function(e) {\n    window.badgerState.outlineRoundness = 1;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"lower-right\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 1 - 21.25 / 128;\n    window.badgerState.v = 1 - 21 / 128;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"lower-left\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 21.25 / 128;\n    window.badgerState.v = 1 - 21 / 128;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"upper-left\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 21.25 / 128;\n    window.badgerState.v = 21 / 128;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"upper-right\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 1 - 21.25 / 128;\n    window.badgerState.v = 21 / 128;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"lower-right-inner\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n    window.badgerState.v = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"lower-left-inner\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n    window.badgerState.v = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"upper-left-inner\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n    window.badgerState.v = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"upper-right-inner\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n    window.badgerState.v = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"default-radius\").addEventListener(\"click\", function(e) {\n    window.badgerState.normalizedRadius = 21 / 128;\n    window.badgerState.normalizedBorder = 0.25 - 21 / 128;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"default-contents\").addEventListener(\"click\", function(e) {\n    window.badgerState.normalizedFontSize = 30 / 128;\n    window.badgerState.badgeText = \"1\";\n    window.badgerState.uTextOffset = 0;\n    window.badgerState.vTextOffset = 0;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"sample-server-pfp\").addEventListener(\"click\", async function(e) {\n    const blob = await LoadImageAsBlob(document.getElementById(\"sample-server-pfp-image\"));\n    window.badgerState.mainImage.src = URL.createObjectURL(blob);\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"sample-server-pfp-overlay\").addEventListener(\"click\", async function(e) {\n    const blob = await LoadImageAsBlob(document.getElementById(\"sample-server-pfp-overlay-image\"));\n    window.badgerState.mainImage.src = URL.createObjectURL(blob);\n    window.badgerState.MarkDirty();\n});\n/// /////////////////////////////////////////////////////////////////////////////\ndocument.getElementById(\"lower-right\").click();\ndocument.getElementById(\"default-radius\").click();\ndocument.getElementById(\"default-contents\").click();\n\n//# sourceMappingURL=index.58c99199.js.map\n","\n// For semistandard.\n/* global FileReader */\n/* global Image */\n/* global Blob */\n/* global URL */\n/* global XMLSerializer */\n\nfunction ClearCircle ({ x, y, radius, ctx }) {\n  // ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.globalCompositeOperation = 'destination-out';\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, 2 * Math.PI);\n  ctx.fill();\n  ctx.globalCompositeOperation = 'source-over';\n}\n\nfunction FillCircle ({ x, y, radius, color, ctx }) {\n  console.log(`FillCircle().x: ${x}, y: ${y}, radius: ${radius}, color: ${color}`);\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, 2 * Math.PI);\n  ctx.fill();\n}\n\nfunction DrawImage ({ canvas, img, imgSize, u, v, radiusU, borderU, fontSizeU, offsetU, offsetV }) {\n  const ctx /*: CanvasRenderingContext2D */= canvas.getContext('2d');\n  canvas.width = imgSize;\n  canvas.height = imgSize;\n  ctx.drawImage(img, 0, 0);\n\n  ClearCircle({ x: u * imgSize, y: v * imgSize, radius: (radiusU + borderU) * imgSize, ctx });\n  FillCircle({ x: u * imgSize, y: v * imgSize, radius: radiusU * imgSize, color: 'red', ctx });\n\n  // Add number to the badge,\n  const textSizePX = fontSizeU * imgSize;\n  ctx.fillStyle = 'white';\n  ctx.font = `700 ${textSizePX}px \"gg sans\", \"Noto Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`;\n  const text = document.getElementById('badge-text').value;\n\n  const metrics = ctx.measureText(text);\n  const textWidth = metrics.width;\n  const textHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n  const method = 'centering';\n  if (method === 'centering') {\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n  }\n\n  let centerX = u * imgSize;\n  centerX += offsetU * imgSize;\n  let centerY = v * imgSize;\n  centerY += offsetV * imgSize;\n\n  if (method === 'metrics') {\n    centerX -= textWidth / 2;\n    centerY += textHeight / 2;\n  }\n\n  ctx.fillText(text, centerX, centerY);\n  canvas.style.display = 'block';\n}\n\nfunction DrawImageOverlay ({ canvas, img }) {\n  const ctx /*: CanvasRenderingContext2D */= canvas.getContext('2d');\n  canvas.width = img.width;\n  canvas.height = img.height;\n  ctx.globalAlpha = 0.5;\n  ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n  canvas.style.display = 'block';\n}\n\n// DO NOT SUBMIT\n// function DrawOutlineOverlay ({ canvas, imgSize, alpha, roundness }) {\n//   const ctx /*: CanvasRenderingContext2D */= canvas.getContext('2d');\n//   canvas.width = imgSize;\n//   canvas.height = imgSize;\n//   ctx.globalAlpha = alpha;\n//   ctx.fillStyle = 'rgba(54, 57, 63)';\n//   ctx.beginPath();\n//   ctx.moveTo(0, 0);\n//   ctx.lineTo(imgSize, 0);\n//   ctx.lineTo(imgSize, imgSize);\n//   ctx.lineTo(0, imgSize);\n//   ctx.closePath();\n//   ctx.fill();\n//   ctx.globalAlpha = 1;\n//   canvas.style.display = 'block';\n// }\n\nfunction DrawOutlineOverlay ({ canvas, imgSize, alpha, roundness }) {\n  const ctx = canvas.getContext('2d');\n  canvas.width = imgSize;\n  canvas.height = imgSize;\n\n  // Fill the background with semitransparent color\n  ctx.fillStyle = `rgba(54, 57, 63, ${alpha})`;\n  ctx.fillRect(0, 0, imgSize, imgSize);\n\n  // Set composite operation for transparent cut-out\n  ctx.globalCompositeOperation = 'destination-out';\n\n  // Calculate radius for rounded corners\n  const radius = imgSize / 2 * roundness;\n  const fullCircle = roundness === 1;\n\n  if (!fullCircle) {\n    // Draw path for rounded rectangle\n    ctx.beginPath();\n    ctx.moveTo(radius, 0);\n    ctx.lineTo(imgSize - radius, 0);\n    ctx.arc(imgSize - radius, radius, radius, 1.5 * Math.PI, 2 * Math.PI);\n    ctx.lineTo(imgSize, imgSize - radius);\n    ctx.arc(imgSize - radius, imgSize - radius, radius, 0, 0.5 * Math.PI);\n    ctx.lineTo(radius, imgSize);\n    ctx.arc(radius, imgSize - radius, radius, 0.5 * Math.PI, Math.PI);\n    ctx.lineTo(0, radius);\n    ctx.arc(radius, radius, radius, Math.PI, 1.5 * Math.PI);\n    ctx.closePath();\n  } else {\n    // Draw a circle for roundness = 1\n    ctx.beginPath();\n    ctx.arc(imgSize / 2, imgSize / 2, radius, 0, 2 * Math.PI);\n  }\n\n  ctx.fillStyle = 'rgba(255, 255, 255, 1)';\n  ctx.fill();\n\n  // Reset composite operation to default\n  ctx.globalCompositeOperation = 'source-over';\n\n  // Optional: Display the canvas again\n  canvas.style.display = 'block';\n}\n\nfunction SVGDrawImage ({ svg /*: SVGElement */, svgSize, img /*: Image */, u, v, fontSizeU, offsetU, offsetV, radius, border }) {\n  // Create mask:\n  const mask = document.createElementNS('http://www.w3.org/2000/svg', 'mask');\n  mask.setAttribute('id', 'image-mask');\n\n  // Mask's full-opacity rectangle:\n  const maskRect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n  maskRect.setAttribute('x', '0');\n  maskRect.setAttribute('y', '0');\n  maskRect.setAttribute('width', '100%');\n  maskRect.setAttribute('height', '100%');\n  maskRect.setAttribute('fill', 'white');\n  mask.appendChild(maskRect);\n\n  // Mask's transparent circle:\n  const maskCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n  maskCircle.setAttribute('cx', u * svgSize);\n  maskCircle.setAttribute('cy', v * svgSize);\n  maskCircle.setAttribute('r', (radius + border) * svgSize);\n  maskCircle.setAttribute('fill', 'black');\n  mask.appendChild(maskCircle);\n\n  svg.appendChild(mask);\n\n  // Draw the image with mask applied:\n  const image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n  image.setAttribute('x', '0');\n  image.setAttribute('y', '0');\n  image.setAttribute('width', '100%');\n  image.setAttribute('height', '100%');\n  image.setAttribute('href', img.src);\n  image.setAttribute('mask', 'url(#image-mask)');\n  svg.appendChild(image);\n\n  const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n  circle.setAttribute('cx', u * svgSize);\n  circle.setAttribute('cy', v * svgSize);\n  circle.setAttribute('r', radius * svgSize);\n  // Set color\n  circle.setAttribute('fill', 'red');\n  svg.appendChild(circle);\n\n  // Add number to the badge,\n  const text = document.getElementById('badge-text').value;\n\n  const textSizePX = fontSizeU * svgSize;\n\n  const textX = u * svgSize + offsetU * svgSize;\n  let textY = v * svgSize + offsetV * svgSize;\n  textY += radius / 2 * svgSize;\n\n  const textElement = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n  textElement.setAttribute('x', textX);\n  textElement.setAttribute('y', textY);\n  textElement.setAttribute('fill', 'white');\n  textElement.setAttribute('text-anchor', 'middle');\n  // textElement.setAttribute('dominant-baseline', 'middle');\n  // textElement.setAttribute('alignment-baseline', 'middle');\n  // textElement.setAttribute('alignment-baseline', 'central');\n  // textElement.setAttribute('alignment-baseline', 'mathematical ');\n  textElement.setAttribute('vertical-align', 'middle');\n\n  textElement.setAttribute('font-size', `${textSizePX}px`);\n  textElement.setAttribute('font-weight', '700');\n  textElement.setAttribute('font-family', '\"gg sans\", \"Noto Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif');\n  textElement.textContent = text;\n  svg.appendChild(textElement);\n\n  svg.style.display = 'block';\n}\n\nfunction ClearSVG ({ svg }) {\n  while (svg.firstChild) {\n    svg.removeChild(svg.firstChild);\n  }\n}\n\nfunction SVGDrawImageOverlay ({ svg, img, alpha }) {\n  // Draw the image:\n  const image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n  image.setAttribute('x', '0');\n  image.setAttribute('y', '0');\n\n  image.setAttribute('width', '100%');\n  image.setAttribute('height', '100%');\n  image.setAttribute('href', img.src);\n  // Set alpha\n  image.setAttribute('opacity', alpha);\n  svg.appendChild(image);\n}\n\nfunction SVGDrawOutlineOverlay ({ svg, svgSize, alpha, roundness }) {\n  const mask = document.createElementNS('http://www.w3.org/2000/svg', 'mask');\n  mask.setAttribute('id', 'outline-overlay-image-mask');\n\n  // Mask's full-opacity rectangle:\n  const visibleRect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n  visibleRect.setAttribute('x', '0');\n  visibleRect.setAttribute('y', '0');\n  visibleRect.setAttribute('width', '100%');\n  visibleRect.setAttribute('height', '100%');\n  visibleRect.setAttribute('fill', 'white');\n  mask.appendChild(visibleRect);\n\n  const transparentRect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n  transparentRect.setAttribute('x', '0');\n  transparentRect.setAttribute('y', '0');\n  transparentRect.setAttribute('width', '100%');\n  transparentRect.setAttribute('height', '100%');\n  transparentRect.setAttribute('fill', 'black');\n  // Add corner radius\n  transparentRect.setAttribute('rx', `${roundness * svgSize / 2}px`);\n  transparentRect.setAttribute('ry', `${roundness * svgSize / 2}px`);\n  mask.appendChild(transparentRect);\n\n  svg.appendChild(mask);\n\n  // Draw a rect with the mask applied\n  const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n  rect.setAttribute('x', '0');\n  rect.setAttribute('y', '0');\n  rect.setAttribute('opacity', alpha);\n  rect.setAttribute('width', '100%');\n  rect.setAttribute('height', '100%');\n  rect.setAttribute('fill', 'rgba(54, 57, 63)');\n  rect.setAttribute('mask', 'url(#outline-overlay-image-mask)');\n  svg.appendChild(rect);\n}\n\nclass State {\n  constructor () {\n    this.mainImage = new Image();\n    this.overlayImage = new Image();\n    this._outlineRoundness = 0;\n    this._u = 0;\n    this._v = 0;\n    this._normalizedRadius = 0;\n    this._normalizedBorder = 0;\n    this._badgeText = '1';\n    this._normalizedFontSize = 0;\n    this._uTextOffset = 0;\n    this._vTextOffset = 0;\n\n    this.dirty = false;\n  }\n\n  GetImageWH () {\n    return { w: this.mainImage.width, h: this.mainImage.height };\n  }\n\n  _RedrawEverything () {\n    const canvas = document.getElementById('canvas');\n    canvas.style.display = 'block';\n    DrawImage({\n      canvas,\n      img: this.mainImage,\n      imgSize: this.mainImage.width,\n      u: this.u,\n      v: this.v,\n      fontSizeU: this.normalizedFontSize,\n      offsetU: this.uTextOffset,\n      offsetV: this.vTextOffset,\n      radiusU: this.normalizedRadius,\n      borderU: this.normalizedBorder\n    });\n\n    const canvasOverlay = document.getElementById('canvas-overlay');\n    canvasOverlay.style.display = 'block';\n    DrawImageOverlay({ canvas: canvasOverlay, img: this.overlayImage });\n    DrawOutlineOverlay({\n      canvas: canvasOverlay,\n      imgSize: this.mainImage.width,\n      alpha: 0.5,\n      roundness: this.outlineRoundness\n    });\n\n    const svg = document.getElementById('svg');\n    svg.style.display = 'block';\n    svg.setAttribute('width', 256);\n    svg.setAttribute('height', 256);\n    ClearSVG({ svg });\n    SVGDrawImage({\n      svg,\n      svgSize: 256,\n      img: this.mainImage,\n      u: this.u,\n      v: this.v,\n      fontSizeU: this.normalizedFontSize,\n      offsetU: this.uTextOffset,\n      offsetV: this.vTextOffset,\n      radius: this.normalizedRadius,\n      border: this.normalizedBorder\n    });\n    const svgOverlay = document.getElementById('svg-overlay');\n    svgOverlay.style.display = 'block';\n    ClearSVG({ svg: svgOverlay });\n    SVGDrawImageOverlay({ svg: svgOverlay, img: this.overlayImage, alpha: 0.5 });\n    SVGDrawOutlineOverlay({ svg: svgOverlay, svgSize: 256, alpha: 0.5, roundness: this.outlineRoundness });\n\n    console.log(`_RedrawEverything().x: ${this.x}, y: ${this.y}, u: ${this.u}, v: ${this.v}`);\n\n    const mainImage = this.mainImage;\n    function SetOrDisable (id, value) {\n      if (mainImage.width === 0) {\n        document.getElementById(id).value = '0';\n        document.getElementById(id).disabled = true;\n      } else {\n        document.getElementById(id).value = value;\n        document.getElementById(id).disabled = false;\n      }\n    }\n\n    document.getElementById('outline-overlay-roundness').value = this.outlineRoundness;\n\n    SetOrDisable('x', this.x);\n    SetOrDisable('y', this.y);\n\n    document.getElementById('u').value = this.u;\n    document.getElementById('v').value = this.v;\n    document.getElementById('normalized-radius').value = this.normalizedRadius;\n    document.getElementById('normalized-border').value = this.normalizedBorder;\n\n    SetOrDisable('pixel-radius', this.pixelRadius);\n    SetOrDisable('pixel-border', this.pixelBorder);\n\n    document.getElementById('badge-text').value = this.badgeText;\n    document.getElementById('normalized-font-size').value = this.normalizedFontSize;\n    document.getElementById('normalized-offset-u').value = this.uTextOffset;\n    document.getElementById('normalized-offset-v').value = this.vTextOffset;\n\n    SetOrDisable('pixel-font-size', this.pixelFontSize);\n    SetOrDisable('pixel-offset-x', this.xTextOffset);\n    SetOrDisable('pixel-offset-y', this.yTextOffset);\n\n    console.log(this);\n  }\n\n  MarkDirty () {\n    if (this.dirty) {\n      return;\n    }\n    this.dirty = true;\n    // Since the image size might have changed, recompute all the computed values that depends on the image size.\n    this.u = 1.0 * this.u;\n    this.v = 1.0 * this.v;\n    this.normalizedRadius = 1.0 * (this.normalizedRadius);\n    this.normalizedBorder = 1.0 * (this.normalizedBorder);\n\n    setTimeout(() => {\n      this._RedrawEverything();\n      this.dirty = false;\n    }, 0);\n  }\n\n  set x (value) {\n    this._u = value / this.GetImageWH().w;\n  }\n\n  get x () {\n    return this._u * this.GetImageWH().w;\n  }\n\n  set y (value) {\n    this._v = value / this.GetImageWH().h;\n  }\n\n  get y () {\n    return this._v * this.GetImageWH().h;\n  }\n\n  set u (value) {\n    this._u = value;\n  }\n\n  get u () {\n    return this._u;\n  }\n\n  set v (value) {\n    this._v = value;\n  }\n\n  get v () {\n    return this._v;\n  }\n\n  set pixelRadius (value) {\n    this._normalizedRadius = value / this.GetImageWH().w;\n  }\n\n  get pixelRadius () {\n    return this._normalizedRadius * this.GetImageWH().w;\n  }\n\n  set normalizedRadius (value) {\n    this._normalizedRadius = value;\n  }\n\n  get normalizedRadius () {\n    return this._normalizedRadius;\n  }\n\n  set pixelBorder (value) {\n    this._normalizedBorder = value / this.GetImageWH().w;\n  }\n\n  get pixelBorder () {\n    return this._normalizedBorder * this.GetImageWH().w;\n  }\n\n  set normalizedBorder (value) {\n    this._normalizedBorder = value;\n  }\n\n  get normalizedBorder () {\n    return this._normalizedBorder;\n  }\n\n  set badgeText (value) {\n    this._badgeText = value;\n  }\n\n  get badgeText () {\n    return this._badgeText;\n  }\n\n  set normalizedFontSize (value) {\n    this._normalizedFontSize = value;\n  }\n\n  get normalizedFontSize () {\n    return this._normalizedFontSize;\n  }\n\n  set pixelFontSize (value) {\n    this._normalizedFontSize = value / this.GetImageWH().w;\n  }\n\n  get pixelFontSize () {\n    return this._normalizedFontSize * this.GetImageWH().w;\n  }\n\n  set uTextOffset (value) {\n    this._uTextOffset = value;\n  }\n\n  get uTextOffset () {\n    return this._uTextOffset;\n  }\n\n  set xTextOffset (value) {\n    this._uTextOffset = value / this.GetImageWH().w;\n  }\n\n  get xTextOffset () {\n    return this._uTextOffset * this.GetImageWH().w;\n  }\n\n  set vTextOffset (value) {\n    this._vTextOffset = value;\n  }\n\n  get vTextOffset () {\n    return this._vTextOffset;\n  }\n\n  set yTextOffset (value) {\n    this._vTextOffset = value / this.GetImageWH().h;\n  }\n\n  get yTextOffset () {\n    return this._vTextOffset * this.GetImageWH().h;\n  }\n\n  set outlineRoundness (value) {\n    this._outlineRoundness = value;\n  }\n\n  get outlineRoundness () {\n    return this._outlineRoundness;\n  }\n}\n\nasync function LoadImageAsBlob (imageElement) {\n  return new Promise((resolve, reject) => {\n    // Define the processImage function to be used in the load event listener\n    const processImage = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = imageElement.width;\n      canvas.height = imageElement.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(imageElement, 0, 0, canvas.width, canvas.height);\n\n      canvas.toBlob(blob => {\n        resolve(blob);\n      }, 'image/png');\n\n      // Clean up: Remove the event listener after processing the image\n      imageElement.removeEventListener('load', processImage);\n      imageElement.removeEventListener('error', handleError);\n    };\n\n    // Define the handleError function to be used in the error event listener\n    const handleError = (error) => {\n      reject(error);\n      // Clean up: Remove the event listener if there's an error\n      imageElement.removeEventListener('load', processImage);\n      imageElement.removeEventListener('error', handleError);\n    };\n\n    if (imageElement.complete && imageElement.naturalHeight !== 0) {\n      // If the image is already loaded, process it immediately\n      processImage();\n    } else {\n      // If the image is not yet loaded, wait for it to load\n      imageElement.addEventListener('load', processImage);\n      imageElement.addEventListener('error', handleError);\n    }\n  });\n}\n\n/// /////////////////////////////////////////////////////////////////////////////\n\nwindow.badgerState = new State();\n\n/// /////////////////////////////////////////////////////////////////////////////\n\ndocument.getElementById('upload-image').addEventListener('change', function (e) {\n  const reader = new FileReader();\n  reader.onload = function (event) {\n    window.badgerState.mainImage.onload = function () {\n      window.badgerState.MarkDirty();\n    };\n    window.badgerState.mainImage.src = event.target.result;\n  };\n  reader.readAsDataURL(e.target.files[0]);\n});\n\ndocument.getElementById('upload-image-overlay').addEventListener('change', function (e) {\n  const reader = new FileReader();\n  reader.onload = function (event) {\n    window.badgerState.overlayImage.onload = function () {\n      window.badgerState.MarkDirty();\n    };\n    window.badgerState.overlayImage.src = event.target.result;\n  };\n  reader.readAsDataURL(e.target.files[0]);\n});\n\ndocument.getElementById('sample-server-pfp').addEventListener('onload', function (e) {\n  window.badgerState.mainImage.onload = function () {\n    window.badgerState.MarkDirty();\n  };\n  window.badgerState.mainImage.src = e.target.src;\n});\n\ndocument.getElementById('sample-server-pfp').addEventListener('onload', function (e) {\n  window.badgerState.mainImage.onload = function () {\n    window.badgerState.MarkDirty();\n  };\n  window.badgerState.mainImage.src = e.target.src;\n});\n\ndocument.getElementById('download-image').addEventListener('click', function (e) {\n  const canvas = document.getElementById('canvas');\n  const image = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream');\n  const link = document.createElement('a');\n  link.download = 'badger-badger-pfp.png';\n  link.href = image;\n  link.click();\n});\n\ndocument.getElementById('download-svg').addEventListener('click', function (e) {\n  const svg = document.getElementById('svg');\n  const svgData = new XMLSerializer().serializeToString(svg);\n  const blob = new Blob([svgData], { type: 'image/svg+xml' });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.download = 'badger-badger-pfp.svg';\n  link.href = url;\n  link.click();\n  URL.revokeObjectURL(url);\n});\n\ndocument.getElementById('download-svg-as-png').addEventListener('click', function (e) {\n  const svg = document.getElementById('svg');\n  const svgData = new XMLSerializer().serializeToString(svg);\n  const canvas = document.createElement('canvas');\n  canvas.width = 256;\n  canvas.height = 256;\n  const ctx = canvas.getContext('2d');\n  const img = new Image();\n  img.onload = function () {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    const image = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream');\n    const link = document.createElement('a');\n    link.download = 'badger-badger-pfp-svg.png';\n    link.href = image;\n    link.click();\n  };\n  img.src = 'data:image/svg+xml;base64,' + btoa(svgData);\n});\n\n/// /////////////////////////////////////////////////////////////////////////////\n\nfor (const eventName of ['input', 'change']) {\n  document.getElementById('x').addEventListener(eventName, function (e) {\n    window.badgerState.x = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('y').addEventListener(eventName, function (e) {\n    window.badgerState.y = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('u').addEventListener(eventName, function (e) {\n    window.badgerState.u = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('v').addEventListener(eventName, function (e) {\n    window.badgerState.v = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('pixel-radius').addEventListener(eventName, function (e) {\n    window.badgerState.pixelRadius = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('normalized-radius').addEventListener(eventName, function (e) {\n    window.badgerState.normalizedRadius = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('pixel-border').addEventListener(eventName, function (e) {\n    window.badgerState.pixelBorder = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('normalized-border').addEventListener(eventName, function (e) {\n    window.badgerState.normalizedBorder = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('badge-text').addEventListener(eventName, function (e) {\n    window.badgerState.badgeText = e.target.value;\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('pixel-font-size').addEventListener(eventName, function (e) {\n    window.badgerState.pixelFontSize = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('normalized-font-size').addEventListener(eventName, function (e) {\n    window.badgerState.normalizedFontSize = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('pixel-offset-x').addEventListener(eventName, function (e) {\n    window.badgerState.xTextOffset = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('normalized-offset-u').addEventListener(eventName, function (e) {\n    window.badgerState.uTextOffset = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('pixel-offset-y').addEventListener(eventName, function (e) {\n    window.badgerState.yTextOffset = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('normalized-offset-v').addEventListener(eventName, function (e) {\n    window.badgerState.vTextOffset = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('outline-overlay-roundness').addEventListener(eventName, function (e) {\n    window.badgerState.outlineRoundness = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n}\n/// /////////////////////////////////////////////////////////////////////////////\ndocument.getElementById('outline-overlay-roundness-server-default').addEventListener('click', function (e) {\n  window.badgerState.outlineRoundness = 0.66;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('outline-overlay-roundness-user-default').addEventListener('click', function (e) {\n  window.badgerState.outlineRoundness = 1;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('lower-right').addEventListener('click', function (e) {\n  window.badgerState.u = 1 - (21.25 / 128);\n  window.badgerState.v = 1 - (21 / 128);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('lower-left').addEventListener('click', function (e) {\n  window.badgerState.u = (21.25 / 128);\n  window.badgerState.v = 1 - (21 / 128);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('upper-left').addEventListener('click', function (e) {\n  window.badgerState.u = (21.25 / 128);\n  window.badgerState.v = (21 / 128);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('upper-right').addEventListener('click', function (e) {\n  window.badgerState.u = 1 - (21.25 / 128);\n  window.badgerState.v = (21 / 128);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('lower-right-inner').addEventListener('click', function (e) {\n  window.badgerState.u = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n  window.badgerState.v = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('lower-left-inner').addEventListener('click', function (e) {\n  window.badgerState.u = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n  window.badgerState.v = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('upper-left-inner').addEventListener('click', function (e) {\n  window.badgerState.u = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n  window.badgerState.v = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('upper-right-inner').addEventListener('click', function (e) {\n  window.badgerState.u = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n  window.badgerState.v = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('default-radius').addEventListener('click', function (e) {\n  window.badgerState.normalizedRadius = (21 / 128);\n  window.badgerState.normalizedBorder = (32 / 128) - (21 / 128);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('default-contents').addEventListener('click', function (e) {\n  window.badgerState.normalizedFontSize = (30 / 128);\n  window.badgerState.badgeText = '1';\n  window.badgerState.uTextOffset = 0;\n  window.badgerState.vTextOffset = 0;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('sample-server-pfp').addEventListener('click', async function (e) {\n  const blob = await LoadImageAsBlob(document.getElementById('sample-server-pfp-image'));\n  window.badgerState.mainImage.src = URL.createObjectURL(blob);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('sample-server-pfp-overlay').addEventListener('click', async function (e) {\n  const blob = await LoadImageAsBlob(document.getElementById('sample-server-pfp-overlay-image'));\n  window.badgerState.mainImage.src = URL.createObjectURL(blob);\n  window.badgerState.MarkDirty();\n});\n\n/// /////////////////////////////////////////////////////////////////////////////\ndocument.getElementById('lower-right').click();\ndocument.getElementById('default-radius').click();\ndocument.getElementById('default-contents').click();\n"],"names":["ClearSVG","svg","firstChild","removeChild","LoadImageAsBlob","imageElement","Promise","resolve","reject","processImage","canvas","document","createElement","width","height","ctx","getContext","drawImage","toBlob","blob","removeEventListener","handleError","error","complete","naturalHeight","addEventListener","eventName","window","badgerState","constructor","mainImage","Image","overlayImage","_outlineRoundness","_u","_v","_normalizedRadius","_normalizedBorder","_badgeText","_normalizedFontSize","_uTextOffset","_vTextOffset","dirty","GetImageWH","w","h","_RedrawEverything","getElementById","style","display","DrawImage","img","imgSize","u","v","radiusU","borderU","fontSizeU","offsetU","offsetV","ClearCircle","x","y","radius","globalCompositeOperation","beginPath","arc","Math","PI","fill","FillCircle","color","console","log","fillStyle","font","text","value","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","textAlign","textBaseline","centerX","centerY","fillText","normalizedFontSize","uTextOffset","vTextOffset","normalizedRadius","normalizedBorder","canvasOverlay","DrawImageOverlay","globalAlpha","DrawOutlineOverlay","alpha","roundness","fillRect","moveTo","lineTo","closePath","outlineRoundness","setAttribute","SVGDrawImage","svgSize","border","mask","createElementNS","maskRect","appendChild","maskCircle","image","src","circle","textY","textElement","textContent","svgOverlay","SVGDrawImageOverlay","SVGDrawOutlineOverlay","visibleRect","transparentRect","rect","SetOrDisable","id","disabled","pixelRadius","pixelBorder","badgeText","pixelFontSize","xTextOffset","yTextOffset","MarkDirty","setTimeout","e","reader","FileReader","onload","event","target","result","readAsDataURL","files","toDataURL","replace","link","download","href","click","svgData","XMLSerializer","serializeToString","Blob","type","url","URL","createObjectURL","revokeObjectURL","btoa","parseFloat","sqrt","textSizePX","textWidth","textHeight","method","fullCircle","textX","State"],"version":3,"file":"index.58c99199.js.map"}
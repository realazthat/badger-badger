{"mappings":"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","sources":["<anon>","app.js"],"sourcesContent":["// For semistandard.\n/* global FileReader */ /* global Image */ function ClearCircle({ x, y, radius, ctx }) {\n    // ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.globalCompositeOperation = \"source-over\";\n}\nfunction FillCircle({ x, y, radius, color, ctx }) {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n}\ndocument.getElementById(\"uploadImageOverlay\").addEventListener(\"change\", function(e) {\n    const reader = new FileReader();\n    reader.onload = function(event) {\n        const img = new Image();\n        img.onload = function() {\n            const canvas = document.getElementById(\"canvas-overlay\");\n            const ctx /*: CanvasRenderingContext2D */  = canvas.getContext(\"2d\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.globalAlpha = 0.5;\n            ctx.drawImage(img, 0, 0);\n            canvas.style.display = \"block\";\n        };\n        img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n});\nfunction DrawImage({ canvas, img }) {\n    const ctx /*: CanvasRenderingContext2D */  = canvas.getContext(\"2d\");\n    const ExpectedImageSize = 128;\n    canvas.width = img.width;\n    canvas.height = img.height;\n    ctx.drawImage(img, 0, 0);\n    const imageSize = img.width;\n    const UVToImgSpace = ({ u, v })=>({\n            x: u * imageSize,\n            y: v * imageSize\n        });\n    const UToImgSpace = ({ u })=>u * imageSize;\n    const circleCenterUV = {\n        u: 1 - 21.25 / 128,\n        v: 1 - 21 / 128\n    };\n    const circleCenterXY = UVToImgSpace(circleCenterUV);\n    const lilCircleRadiusU = 21 / 128;\n    const bigCircleRadiusU = 0.25;\n    const lilCircleRadiusX = UToImgSpace({\n        u: lilCircleRadiusU\n    });\n    const bigCircleRadiusX = UToImgSpace({\n        u: bigCircleRadiusU\n    });\n    console.log(\"circleCenterXY:\", circleCenterXY);\n    console.log(\"lilCircleRadiusX:\", lilCircleRadiusX);\n    console.log(\"bigCircleRadiusX:\", bigCircleRadiusX);\n    ClearCircle({\n        x: circleCenterXY.x,\n        y: circleCenterXY.y,\n        radius: bigCircleRadiusX,\n        ctx\n    });\n    FillCircle({\n        x: circleCenterXY.x,\n        y: circleCenterXY.y,\n        radius: lilCircleRadiusX,\n        color: \"red\",\n        ctx\n    });\n    // Add number to the badge,\n    const textSizePX = Math.round(30 / 128 * imageSize);\n    ctx.fillStyle = \"white\";\n    // ctx.font = `${textSizePX}px Arial`;\n    ctx.font = `700 ${textSizePX}px \"gg sans\", \"Noto Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`;\n    ctx.fillText(\"1\", circleCenterXY.x - textSizePX / 3, circleCenterXY.y + textSizePX / 3);\n    canvas.style.display = \"block\";\n}\ndocument.getElementById(\"uploadImage\").addEventListener(\"change\", function(e) {\n    const reader = new FileReader();\n    reader.onload = function(event) {\n        const img = new Image();\n        img.onload = function() {\n            const canvas = document.getElementById(\"canvas\");\n            DrawImage({\n                canvas,\n                img\n            });\n        };\n        img.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n});\ndocument.getElementById(\"downloadImage\").addEventListener(\"click\", function(e) {\n    const canvas = document.getElementById(\"canvas\");\n    const image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    const link = document.createElement(\"a\");\n    link.download = \"discord-pfp.png\";\n    link.href = image;\n    link.click();\n});\n\n//# sourceMappingURL=index.3240260f.js.map\n","\n// For semistandard.\n/* global FileReader */\n/* global Image */\n\nfunction ClearCircle({x,y,radius, ctx}) {\n  // ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.globalCompositeOperation = 'destination-out';\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, 2 * Math.PI);\n  ctx.fill();\n  ctx.globalCompositeOperation = 'source-over';\n}\n\nfunction FillCircle({x,y,radius, color, ctx}) {\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, 2 * Math.PI);\n  ctx.fill();\n}\n\ndocument.getElementById('uploadImageOverlay').addEventListener('change', function (e) {\n  const reader = new FileReader();\n  reader.onload = function (event) {\n    const img = new Image();\n    img.onload = function () {\n      const canvas = document.getElementById('canvas-overlay');\n      const ctx /*: CanvasRenderingContext2D */= canvas.getContext('2d');\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.globalAlpha = 0.5;\n      ctx.drawImage(img, 0, 0);\n\n      canvas.style.display = 'block';\n    };\n    img.src = event.target.result;\n  };\n  reader.readAsDataURL(e.target.files[0]);\n});\n\nfunction DrawImage({canvas, img}) {\n\n  const ctx /*: CanvasRenderingContext2D */= canvas.getContext('2d');\n  const ExpectedImageSize = 128;\n  canvas.width = img.width;\n  canvas.height = img.height;\n  ctx.drawImage(img, 0, 0);\n\n\n  const imageSize = img.width;\n  const UVToImgSpace = ({u, v}) => ({x: u * imageSize, y: v * imageSize});\n  const UToImgSpace = ({u}) => u * imageSize;\n  \n  const circleCenterUV = {u: 1 - 21.25/128, v: 1 - 21/128};\n  const circleCenterXY = UVToImgSpace(circleCenterUV);\n  const lilCircleRadiusU = 21/128;\n  const bigCircleRadiusU = 32/128;\n  const lilCircleRadiusX = UToImgSpace({u: lilCircleRadiusU});\n  const bigCircleRadiusX = UToImgSpace({u: bigCircleRadiusU});\n  \n  console.log('circleCenterXY:', circleCenterXY);\n  console.log('lilCircleRadiusX:', lilCircleRadiusX);\n  console.log('bigCircleRadiusX:', bigCircleRadiusX);\n  \n  ClearCircle({x: circleCenterXY.x, y: circleCenterXY.y, radius: bigCircleRadiusX, ctx});\n  FillCircle({x: circleCenterXY.x, y: circleCenterXY.y, radius: lilCircleRadiusX, color: 'red', ctx});\n  \n  // Add number to the badge,\n  const textSizePX = Math.round(30/128 * imageSize);\n  ctx.fillStyle = 'white';\n  // ctx.font = `${textSizePX}px Arial`;\n  ctx.font = `700 ${textSizePX}px \"gg sans\", \"Noto Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`;\n  ctx.fillText('1', circleCenterXY.x - textSizePX/3, circleCenterXY.y+textSizePX/3);\n  canvas.style.display = 'block';\n}\n\ndocument.getElementById('uploadImage').addEventListener('change', function (e) {\n  const reader = new FileReader();\n  reader.onload = function (event) {\n    const img = new Image();\n    img.onload = function () {\n      const canvas = document.getElementById('canvas');\n      DrawImage({canvas, img});\n    };\n    img.src = event.target.result;\n  };\n  reader.readAsDataURL(e.target.files[0]);\n});\n\ndocument.getElementById('downloadImage').addEventListener('click', function (e) {\n  const canvas = document.getElementById('canvas');\n  const image = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream');\n  const link = document.createElement('a');\n  link.download = 'discord-pfp.png';\n  link.href = image;\n  link.click();\n});\n"],"names":["document","getElementById","addEventListener","e","reader","FileReader","onload","event","img","Image","canvas","ctx","getContext","width","height","globalAlpha","drawImage","style","display","src","target","result","readAsDataURL","files","DrawImage","imageSize","circleCenterXY","UVToImgSpace","u","v","x","y","lilCircleRadiusX","UToImgSpace","bigCircleRadiusX","console","log","ClearCircle","radius","globalCompositeOperation","beginPath","arc","Math","PI","fill","FillCircle","color","fillStyle","textSizePX","round","font","fillText","image","toDataURL","replace","link","createElement","download","href","click","ExpectedImageSize","circleCenterUV","lilCircleRadiusU","bigCircleRadiusU"],"version":3,"file":"index.3240260f.js.map"}
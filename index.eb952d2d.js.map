{"mappings":"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","sources":["<anon>","app.js"],"sourcesContent":["// For semistandard.\n/* global FileReader */ /* global Image */ /* global Blob */ /* global URL */ /* global XMLSerializer */ function ClearCircle({ x, y, radius, ctx }) {\n    // ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.globalCompositeOperation = \"source-over\";\n}\nfunction FillCircle({ x, y, radius, color, ctx }) {\n    console.log(`FillCircle().x: ${x}, y: ${y}, radius: ${radius}, color: ${color}`);\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n}\nfunction DrawImage({ canvas, ctx, img, imgSize, u, v, radiusU, borderU, fontSizeU, offsetU, offsetV }) {\n    ctx.drawImage(img, 0, 0, imgSize, imgSize);\n    ClearCircle({\n        x: u * imgSize,\n        y: v * imgSize,\n        radius: (radiusU + borderU) * imgSize,\n        ctx\n    });\n    FillCircle({\n        x: u * imgSize,\n        y: v * imgSize,\n        radius: radiusU * imgSize,\n        color: \"red\",\n        ctx\n    });\n    // Add number to the badge,\n    const textSizePX = fontSizeU * imgSize;\n    ctx.fillStyle = \"white\";\n    ctx.font = `700 ${textSizePX}px \"gg sans\", \"Noto Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`;\n    const text = document.getElementById(\"badge-text\").value;\n    const metrics = ctx.measureText(text);\n    const textWidth = metrics.width;\n    const textHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n    const method = \"centering\";\n    if (method === \"centering\") {\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n    }\n    let centerX = u * imgSize;\n    centerX += offsetU * imgSize;\n    let centerY = v * imgSize;\n    centerY += offsetV * imgSize;\n    if (method === \"metrics\") {\n        centerX -= textWidth / 2;\n        centerY += textHeight / 2;\n    }\n    ctx.fillText(text, centerX, centerY);\n}\nfunction DrawImageOverlay({ canvas, ctx, img, imgSize, alpha }) {\n    console.log(`DrawImageOverlay().imgSize: ${imgSize}, alpha: ${alpha}, img.width: ${img.width}, img.height: ${img.height}`);\n    ctx.globalAlpha = alpha;\n    ctx.drawImage(img, 0, 0, imgSize, imgSize);\n    ctx.globalAlpha = 1;\n}\nfunction DrawOutlineOverlay({ canvas, ctx, imgSize, alpha, roundness }) {\n    const offScreenCanvas = document.createElement(\"canvas\");\n    offScreenCanvas.width = imgSize;\n    offScreenCanvas.height = imgSize;\n    const offCtx = offScreenCanvas.getContext(\"2d\");\n    // Fill the background with semitransparent color\n    offCtx.fillStyle = `rgba(54, 57, 63, ${alpha})`;\n    offCtx.fillRect(0, 0, imgSize, imgSize);\n    // Set composite operation for transparent cut-out\n    offCtx.globalCompositeOperation = \"destination-out\";\n    // Calculate radius for rounded corners\n    const radius = imgSize / 2 * roundness;\n    const fullCircle = roundness === 1;\n    if (!fullCircle) {\n        // Draw path for rounded rectangle\n        offCtx.beginPath();\n        offCtx.moveTo(radius, 0);\n        offCtx.lineTo(imgSize - radius, 0);\n        offCtx.arc(imgSize - radius, radius, radius, 1.5 * Math.PI, 2 * Math.PI);\n        offCtx.lineTo(imgSize, imgSize - radius);\n        offCtx.arc(imgSize - radius, imgSize - radius, radius, 0, 0.5 * Math.PI);\n        offCtx.lineTo(radius, imgSize);\n        offCtx.arc(radius, imgSize - radius, radius, 0.5 * Math.PI, Math.PI);\n        offCtx.lineTo(0, radius);\n        offCtx.arc(radius, radius, radius, Math.PI, 1.5 * Math.PI);\n        offCtx.closePath();\n    } else {\n        // Draw a circle for roundness = 1\n        offCtx.beginPath();\n        offCtx.arc(imgSize / 2, imgSize / 2, radius, 0, 2 * Math.PI);\n    }\n    offCtx.fillStyle = \"rgba(255, 255, 255, 1)\";\n    offCtx.fill();\n    // Reset composite operation to default\n    offCtx.globalCompositeOperation = \"source-over\";\n    ctx.drawImage(offScreenCanvas, 0, 0, imgSize, imgSize);\n}\nfunction SVGDrawImage({ svg/*: SVGElement */ , svgSize, img/*: Image */ , u, v, fontSizeU, offsetU, offsetV, radius, border }) {\n    // Create mask:\n    const mask = document.createElementNS(\"http://www.w3.org/2000/svg\", \"mask\");\n    mask.setAttribute(\"id\", \"image-mask\");\n    // Mask's full-opacity rectangle:\n    const maskRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    maskRect.setAttribute(\"x\", \"0\");\n    maskRect.setAttribute(\"y\", \"0\");\n    maskRect.setAttribute(\"width\", \"100%\");\n    maskRect.setAttribute(\"height\", \"100%\");\n    maskRect.setAttribute(\"fill\", \"white\");\n    mask.appendChild(maskRect);\n    // Mask's transparent circle:\n    const maskCircle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    maskCircle.setAttribute(\"cx\", u * svgSize);\n    maskCircle.setAttribute(\"cy\", v * svgSize);\n    maskCircle.setAttribute(\"r\", (radius + border) * svgSize);\n    maskCircle.setAttribute(\"fill\", \"black\");\n    mask.appendChild(maskCircle);\n    svg.appendChild(mask);\n    // Draw the image with mask applied:\n    const image = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n    image.setAttribute(\"x\", \"0\");\n    image.setAttribute(\"y\", \"0\");\n    image.setAttribute(\"width\", \"100%\");\n    image.setAttribute(\"height\", \"100%\");\n    image.setAttribute(\"href\", img.src);\n    image.setAttribute(\"mask\", \"url(#image-mask)\");\n    svg.appendChild(image);\n    const circle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    circle.setAttribute(\"cx\", u * svgSize);\n    circle.setAttribute(\"cy\", v * svgSize);\n    circle.setAttribute(\"r\", radius * svgSize);\n    // Set color\n    circle.setAttribute(\"fill\", \"red\");\n    svg.appendChild(circle);\n    // Add number to the badge,\n    const text = document.getElementById(\"badge-text\").value;\n    const textSizePX = fontSizeU * svgSize;\n    const textX = u * svgSize + offsetU * svgSize;\n    let textY = v * svgSize + offsetV * svgSize;\n    textY += radius / 2 * svgSize;\n    const textElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    textElement.setAttribute(\"x\", textX);\n    textElement.setAttribute(\"y\", textY);\n    textElement.setAttribute(\"fill\", \"white\");\n    textElement.setAttribute(\"text-anchor\", \"middle\");\n    // textElement.setAttribute('dominant-baseline', 'middle');\n    // textElement.setAttribute('alignment-baseline', 'middle');\n    // textElement.setAttribute('alignment-baseline', 'central');\n    // textElement.setAttribute('alignment-baseline', 'mathematical ');\n    textElement.setAttribute(\"vertical-align\", \"middle\");\n    textElement.setAttribute(\"font-size\", `${textSizePX}px`);\n    textElement.setAttribute(\"font-weight\", \"700\");\n    textElement.setAttribute(\"font-family\", '\"gg sans\", \"Noto Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif');\n    textElement.textContent = text;\n    svg.appendChild(textElement);\n    svg.style.display = \"block\";\n}\nfunction ClearSVG({ svg }) {\n    while(svg.firstChild)svg.removeChild(svg.firstChild);\n}\nfunction SVGDrawImageOverlay({ svg, img, alpha }) {\n    const image = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n    image.setAttribute(\"x\", \"0\");\n    image.setAttribute(\"y\", \"0\");\n    image.setAttribute(\"width\", \"100%\");\n    image.setAttribute(\"height\", \"100%\");\n    image.setAttribute(\"href\", img.src);\n    image.setAttribute(\"opacity\", alpha);\n    svg.appendChild(image);\n}\nfunction SVGDrawOutlineOverlay({ svg, svgSize, alpha, roundness }) {\n    const mask = document.createElementNS(\"http://www.w3.org/2000/svg\", \"mask\");\n    mask.setAttribute(\"id\", \"outline-overlay-image-mask\");\n    // Mask's full-opacity rectangle:\n    const visibleRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    visibleRect.setAttribute(\"x\", \"0\");\n    visibleRect.setAttribute(\"y\", \"0\");\n    visibleRect.setAttribute(\"width\", \"100%\");\n    visibleRect.setAttribute(\"height\", \"100%\");\n    visibleRect.setAttribute(\"fill\", \"white\");\n    mask.appendChild(visibleRect);\n    const transparentRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    transparentRect.setAttribute(\"x\", \"0\");\n    transparentRect.setAttribute(\"y\", \"0\");\n    transparentRect.setAttribute(\"width\", \"100%\");\n    transparentRect.setAttribute(\"height\", \"100%\");\n    transparentRect.setAttribute(\"fill\", \"black\");\n    // Add corner radius\n    transparentRect.setAttribute(\"rx\", `${roundness * svgSize / 2}px`);\n    transparentRect.setAttribute(\"ry\", `${roundness * svgSize / 2}px`);\n    mask.appendChild(transparentRect);\n    svg.appendChild(mask);\n    // Draw a rect with the mask applied\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    rect.setAttribute(\"x\", \"0\");\n    rect.setAttribute(\"y\", \"0\");\n    rect.setAttribute(\"opacity\", alpha);\n    rect.setAttribute(\"width\", \"100%\");\n    rect.setAttribute(\"height\", \"100%\");\n    rect.setAttribute(\"fill\", \"rgba(54, 57, 63)\");\n    rect.setAttribute(\"mask\", \"url(#outline-overlay-image-mask)\");\n    svg.appendChild(rect);\n}\nclass State {\n    constructor(){\n        this.mainImage = new Image();\n        this.overlayImage = new Image();\n        this._imageOverlayAlpha = 0.5;\n        this._outlineOverlayAlpha = 0.5;\n        this._outlineRoundness = 0;\n        this._u = 0;\n        this._v = 0;\n        this._normalizedRadius = 0;\n        this._normalizedBorder = 0;\n        this._badgeText = \"1\";\n        this._normalizedFontSize = 0;\n        this._uTextOffset = 0;\n        this._vTextOffset = 0;\n        this.dirty = false;\n    }\n    GetImageWH() {\n        return {\n            w: this.mainImage.width,\n            h: this.mainImage.height\n        };\n    }\n    _RedrawEverything() {\n        const canvas = document.getElementById(\"canvas\");\n        canvas.width = 256;\n        canvas.height = 256;\n        canvas.style.display = \"block\";\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        DrawImage({\n            canvas,\n            ctx,\n            img: this.mainImage,\n            imgSize: 256,\n            u: this.u,\n            v: this.v,\n            fontSizeU: this.normalizedFontSize,\n            offsetU: this.uTextOffset,\n            offsetV: this.vTextOffset,\n            radiusU: this.normalizedRadius,\n            borderU: this.normalizedBorder\n        });\n        const canvasOverlay = document.getElementById(\"canvas-overlay\");\n        canvasOverlay.style.display = \"block\";\n        canvasOverlay.width = 256;\n        canvasOverlay.height = 256;\n        const ctxOverlay = canvasOverlay.getContext(\"2d\");\n        ctxOverlay.clearRect(0, 0, canvas.width, canvas.height);\n        DrawImageOverlay({\n            canvas: canvasOverlay,\n            ctx: ctxOverlay,\n            img: this.overlayImage,\n            imgSize: 256,\n            alpha: this.imageOverlayAlpha\n        });\n        DrawOutlineOverlay({\n            canvas: canvasOverlay,\n            ctx: ctxOverlay,\n            imgSize: 256,\n            alpha: this.outlineOverlayAlpha,\n            roundness: this.outlineRoundness\n        });\n        const svg = document.getElementById(\"svg\");\n        svg.style.display = \"block\";\n        svg.setAttribute(\"width\", 256);\n        svg.setAttribute(\"height\", 256);\n        ClearSVG({\n            svg\n        });\n        SVGDrawImage({\n            svg,\n            svgSize: 256,\n            img: this.mainImage,\n            u: this.u,\n            v: this.v,\n            fontSizeU: this.normalizedFontSize,\n            offsetU: this.uTextOffset,\n            offsetV: this.vTextOffset,\n            radius: this.normalizedRadius,\n            border: this.normalizedBorder\n        });\n        const svgOverlay = document.getElementById(\"svg-overlay\");\n        svgOverlay.style.display = \"block\";\n        ClearSVG({\n            svg: svgOverlay\n        });\n        SVGDrawImageOverlay({\n            svg: svgOverlay,\n            img: this.overlayImage,\n            alpha: this.imageOverlayAlpha\n        });\n        SVGDrawOutlineOverlay({\n            svg: svgOverlay,\n            svgSize: 256,\n            alpha: this.outlineOverlayAlpha,\n            roundness: this.outlineRoundness\n        });\n        console.log(`_RedrawEverything().x: ${this.x}, y: ${this.y}, u: ${this.u}, v: ${this.v}`);\n        const mainImage = this.mainImage;\n        function SetOrDisable(id, value) {\n            if (mainImage.width === 0) {\n                document.getElementById(id).value = \"0\";\n                document.getElementById(id).disabled = true;\n            } else {\n                document.getElementById(id).value = value;\n                document.getElementById(id).disabled = false;\n            }\n        }\n        document.getElementById(\"image-overlay-alpha\").value = this.imageOverlayAlpha;\n        document.getElementById(\"outline-overlay-alpha\").value = this.outlineOverlayAlpha;\n        document.getElementById(\"outline-overlay-roundness\").value = this.outlineRoundness;\n        SetOrDisable(\"x\", this.x);\n        SetOrDisable(\"y\", this.y);\n        document.getElementById(\"u\").value = this.u;\n        document.getElementById(\"v\").value = this.v;\n        document.getElementById(\"normalized-radius\").value = this.normalizedRadius;\n        document.getElementById(\"normalized-border\").value = this.normalizedBorder;\n        SetOrDisable(\"pixel-radius\", this.pixelRadius);\n        SetOrDisable(\"pixel-border\", this.pixelBorder);\n        document.getElementById(\"badge-text\").value = this.badgeText;\n        document.getElementById(\"normalized-font-size\").value = this.normalizedFontSize;\n        document.getElementById(\"normalized-offset-u\").value = this.uTextOffset;\n        document.getElementById(\"normalized-offset-v\").value = this.vTextOffset;\n        SetOrDisable(\"pixel-font-size\", this.pixelFontSize);\n        SetOrDisable(\"pixel-offset-x\", this.xTextOffset);\n        SetOrDisable(\"pixel-offset-y\", this.yTextOffset);\n        console.log(this);\n    }\n    MarkDirty() {\n        if (this.dirty) return;\n        this.dirty = true;\n        // Since the image size might have changed, recompute all the computed values that depends on the image size.\n        this.u = 1.0 * this.u;\n        this.v = 1.0 * this.v;\n        this.normalizedRadius = 1.0 * this.normalizedRadius;\n        this.normalizedBorder = 1.0 * this.normalizedBorder;\n        setTimeout(()=>{\n            this._RedrawEverything();\n            this.dirty = false;\n        }, 0);\n    }\n    set imageOverlayAlpha(value) {\n        this._imageOverlayAlpha = value;\n    }\n    get imageOverlayAlpha() {\n        return this._imageOverlayAlpha;\n    }\n    set outlineOverlayAlpha(value) {\n        this._outlineOverlayAlpha = value;\n    }\n    get outlineOverlayAlpha() {\n        return this._outlineOverlayAlpha;\n    }\n    set outlineRoundness(value) {\n        this._outlineRoundness = value;\n    }\n    get outlineRoundness() {\n        return this._outlineRoundness;\n    }\n    set x(value) {\n        this._u = value / this.GetImageWH().w;\n    }\n    get x() {\n        return this._u * this.GetImageWH().w;\n    }\n    set y(value) {\n        this._v = value / this.GetImageWH().h;\n    }\n    get y() {\n        return this._v * this.GetImageWH().h;\n    }\n    set u(value) {\n        this._u = value;\n    }\n    get u() {\n        return this._u;\n    }\n    set v(value) {\n        this._v = value;\n    }\n    get v() {\n        return this._v;\n    }\n    set pixelRadius(value) {\n        this._normalizedRadius = value / this.GetImageWH().w;\n    }\n    get pixelRadius() {\n        return this._normalizedRadius * this.GetImageWH().w;\n    }\n    set normalizedRadius(value) {\n        this._normalizedRadius = value;\n    }\n    get normalizedRadius() {\n        return this._normalizedRadius;\n    }\n    set pixelBorder(value) {\n        this._normalizedBorder = value / this.GetImageWH().w;\n    }\n    get pixelBorder() {\n        return this._normalizedBorder * this.GetImageWH().w;\n    }\n    set normalizedBorder(value) {\n        this._normalizedBorder = value;\n    }\n    get normalizedBorder() {\n        return this._normalizedBorder;\n    }\n    set badgeText(value) {\n        this._badgeText = value;\n    }\n    get badgeText() {\n        return this._badgeText;\n    }\n    set normalizedFontSize(value) {\n        this._normalizedFontSize = value;\n    }\n    get normalizedFontSize() {\n        return this._normalizedFontSize;\n    }\n    set pixelFontSize(value) {\n        this._normalizedFontSize = value / this.GetImageWH().w;\n    }\n    get pixelFontSize() {\n        return this._normalizedFontSize * this.GetImageWH().w;\n    }\n    set uTextOffset(value) {\n        this._uTextOffset = value;\n    }\n    get uTextOffset() {\n        return this._uTextOffset;\n    }\n    set xTextOffset(value) {\n        this._uTextOffset = value / this.GetImageWH().w;\n    }\n    get xTextOffset() {\n        return this._uTextOffset * this.GetImageWH().w;\n    }\n    set vTextOffset(value) {\n        this._vTextOffset = value;\n    }\n    get vTextOffset() {\n        return this._vTextOffset;\n    }\n    set yTextOffset(value) {\n        this._vTextOffset = value / this.GetImageWH().h;\n    }\n    get yTextOffset() {\n        return this._vTextOffset * this.GetImageWH().h;\n    }\n}\nasync function LoadBlobAsImage(blob) {\n    return new Promise((resolve, reject)=>{\n        const img = new Image();\n        function handleLoad() {\n            img.removeEventListener(\"load\", handleLoad);\n            img.removeEventListener(\"error\", handleError);\n            resolve(img);\n        }\n        function handleError(error) {\n            img.removeEventListener(\"load\", handleLoad);\n            img.removeEventListener(\"error\", handleError);\n            reject(error);\n        }\n        img.addEventListener(\"load\", handleLoad);\n        img.addEventListener(\"error\", handleError);\n        img.src = URL.createObjectURL(blob);\n    });\n}\nasync function LoadImageAsBlob(image /* Image */ ) {\n    return new Promise((resolve, reject)=>{\n        // Define the processImage function to be used in the load event listener\n        const processImage = ()=>{\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = image.width;\n            canvas.height = image.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n            canvas.toBlob((blob)=>{\n                resolve(blob);\n            }, \"image/png\");\n            // Clean up: Remove the event listener after processing the image\n            image.removeEventListener(\"load\", processImage);\n            image.removeEventListener(\"error\", handleError);\n        };\n        // Define the handleError function to be used in the error event listener\n        const handleError = (error)=>{\n            reject(error);\n            // Clean up: Remove the event listener if there's an error\n            image.removeEventListener(\"load\", processImage);\n            image.removeEventListener(\"error\", handleError);\n        };\n        if (image.complete && image.naturalHeight !== 0) // If the image is already loaded, process it immediately\n        processImage();\n        else {\n            // If the image is not yet loaded, wait for it to load\n            image.addEventListener(\"load\", processImage);\n            image.addEventListener(\"error\", handleError);\n        }\n    });\n}\n/// /////////////////////////////////////////////////////////////////////////////\nwindow.badgerState = new State();\n/// /////////////////////////////////////////////////////////////////////////////\ndocument.getElementById(\"upload-image\").addEventListener(\"change\", function(e) {\n    const reader = new FileReader();\n    reader.onload = function(event) {\n        window.badgerState.mainImage = new Image();\n        window.badgerState.mainImage.onload = function() {\n            window.badgerState.MarkDirty();\n        };\n        window.badgerState.mainImage.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n});\ndocument.getElementById(\"upload-image-overlay\").addEventListener(\"change\", function(e) {\n    window.badgerState.overlayImage = new Image();\n    const reader = new FileReader();\n    reader.onload = function(event) {\n        window.badgerState.overlayImage = new Image();\n        window.badgerState.overlayImage.onload = function() {\n            window.badgerState.MarkDirty();\n        };\n        window.badgerState.overlayImage.src = event.target.result;\n    };\n    reader.readAsDataURL(e.target.files[0]);\n});\ndocument.getElementById(\"download-image\").addEventListener(\"click\", function(e) {\n    const canvas = document.getElementById(\"canvas\");\n    const image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    const link = document.createElement(\"a\");\n    link.download = \"badger-badger-pfp.png\";\n    link.href = image;\n    link.click();\n});\ndocument.getElementById(\"download-svg\").addEventListener(\"click\", function(e) {\n    const svg = document.getElementById(\"svg\");\n    const svgData = new XMLSerializer().serializeToString(svg);\n    const blob = new Blob([\n        svgData\n    ], {\n        type: \"image/svg+xml\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.download = \"badger-badger-pfp.svg\";\n    link.href = url;\n    link.click();\n    URL.revokeObjectURL(url);\n});\ndocument.getElementById(\"download-svg-as-png\").addEventListener(\"click\", function(e) {\n    const svg = document.getElementById(\"svg\");\n    const svgData = new XMLSerializer().serializeToString(svg);\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 256;\n    canvas.height = 256;\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n    img.onload = function() {\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        const image = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n        const link = document.createElement(\"a\");\n        link.download = \"badger-badger-pfp-svg.png\";\n        link.href = image;\n        link.click();\n    };\n    img.src = \"data:image/svg+xml;base64,\" + btoa(svgData);\n});\n/// /////////////////////////////////////////////////////////////////////////////\nfor (const eventName of [\n    \"input\",\n    \"change\"\n]){\n    document.getElementById(\"image-overlay-alpha\").addEventListener(eventName, function(e) {\n        window.badgerState.imageOverlayAlpha = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"outline-overlay-alpha\").addEventListener(eventName, function(e) {\n        window.badgerState.outlineOverlayAlpha = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"outline-overlay-roundness\").addEventListener(eventName, function(e) {\n        window.badgerState.outlineRoundness = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"x\").addEventListener(eventName, function(e) {\n        window.badgerState.x = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"y\").addEventListener(eventName, function(e) {\n        window.badgerState.y = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"u\").addEventListener(eventName, function(e) {\n        window.badgerState.u = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"v\").addEventListener(eventName, function(e) {\n        window.badgerState.v = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"pixel-radius\").addEventListener(eventName, function(e) {\n        window.badgerState.pixelRadius = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"normalized-radius\").addEventListener(eventName, function(e) {\n        window.badgerState.normalizedRadius = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"pixel-border\").addEventListener(eventName, function(e) {\n        window.badgerState.pixelBorder = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"normalized-border\").addEventListener(eventName, function(e) {\n        window.badgerState.normalizedBorder = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"badge-text\").addEventListener(eventName, function(e) {\n        window.badgerState.badgeText = e.target.value;\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"pixel-font-size\").addEventListener(eventName, function(e) {\n        window.badgerState.pixelFontSize = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"normalized-font-size\").addEventListener(eventName, function(e) {\n        window.badgerState.normalizedFontSize = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"pixel-offset-x\").addEventListener(eventName, function(e) {\n        window.badgerState.xTextOffset = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"normalized-offset-u\").addEventListener(eventName, function(e) {\n        window.badgerState.uTextOffset = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"pixel-offset-y\").addEventListener(eventName, function(e) {\n        window.badgerState.yTextOffset = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n    document.getElementById(\"normalized-offset-v\").addEventListener(eventName, function(e) {\n        window.badgerState.vTextOffset = parseFloat(e.target.value);\n        window.badgerState.MarkDirty();\n    });\n}\n/// /////////////////////////////////////////////////////////////////////////////\ndocument.getElementById(\"outline-overlay-roundness-server-default\").addEventListener(\"click\", function(e) {\n    window.badgerState.outlineRoundness = 0.66;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"outline-overlay-roundness-user-default\").addEventListener(\"click\", function(e) {\n    window.badgerState.outlineRoundness = 1;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"outline-overlay-roundness-clear\").addEventListener(\"click\", function(e) {\n    window.badgerState.outlineRoundness = 0;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"lower-right\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 1 - 21.25 / 128;\n    window.badgerState.v = 1 - 21 / 128;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"lower-left\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 21.25 / 128;\n    window.badgerState.v = 1 - 21 / 128;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"upper-left\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 21.25 / 128;\n    window.badgerState.v = 21 / 128;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"upper-right\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 1 - 21.25 / 128;\n    window.badgerState.v = 21 / 128;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"lower-right-inner\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n    window.badgerState.v = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"lower-left-inner\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n    window.badgerState.v = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"upper-left-inner\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n    window.badgerState.v = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"upper-right-inner\").addEventListener(\"click\", function(e) {\n    window.badgerState.u = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n    window.badgerState.v = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"default-radius\").addEventListener(\"click\", function(e) {\n    window.badgerState.normalizedRadius = 21 / 128;\n    window.badgerState.normalizedBorder = 0.25 - 21 / 128;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"default-contents\").addEventListener(\"click\", function(e) {\n    window.badgerState.normalizedFontSize = 30 / 128;\n    window.badgerState.badgeText = \"1\";\n    window.badgerState.uTextOffset = 0;\n    window.badgerState.vTextOffset = 0;\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"sample-pfp\").addEventListener(\"click\", async function(e) {\n    const blob = await LoadImageAsBlob(document.getElementById(\"sample-pfp-image\"));\n    window.badgerState.mainImage = await LoadBlobAsImage(blob);\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"clear-pfp\").addEventListener(\"click\", async function(e) {\n    window.badgerState.mainImage = new Image();\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"sample-pfp-overlay\").addEventListener(\"click\", async function(e) {\n    const blob = await LoadImageAsBlob(document.getElementById(\"sample-pfp-overlay-image\"));\n    window.badgerState.overlayImage = await LoadBlobAsImage(blob);\n    window.badgerState.MarkDirty();\n});\ndocument.getElementById(\"clear-pfp-overlay\").addEventListener(\"click\", async function(e) {\n    window.badgerState.overlayImage = new Image();\n    window.badgerState.MarkDirty();\n});\n/// /////////////////////////////////////////////////////////////////////////////\ndocument.getElementById(\"lower-right\").click();\ndocument.getElementById(\"default-radius\").click();\ndocument.getElementById(\"default-contents\").click();\n\n//# sourceMappingURL=index.eb952d2d.js.map\n","\n// For semistandard.\n/* global FileReader */\n/* global Image */\n/* global Blob */\n/* global URL */\n/* global XMLSerializer */\n\nfunction ClearCircle ({ x, y, radius, ctx }) {\n  // ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.globalCompositeOperation = 'destination-out';\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, 2 * Math.PI);\n  ctx.fill();\n  ctx.globalCompositeOperation = 'source-over';\n}\n\nfunction FillCircle ({ x, y, radius, color, ctx }) {\n  console.log(`FillCircle().x: ${x}, y: ${y}, radius: ${radius}, color: ${color}`);\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, 2 * Math.PI);\n  ctx.fill();\n}\n\nfunction DrawImage ({ canvas, ctx, img, imgSize, u, v, radiusU, borderU, fontSizeU, offsetU, offsetV }) {\n  ctx.drawImage(img, 0, 0, imgSize, imgSize);\n\n  ClearCircle({ x: u * imgSize, y: v * imgSize, radius: (radiusU + borderU) * imgSize, ctx });\n  FillCircle({ x: u * imgSize, y: v * imgSize, radius: radiusU * imgSize, color: 'red', ctx });\n\n  // Add number to the badge,\n  const textSizePX = fontSizeU * imgSize;\n  ctx.fillStyle = 'white';\n  ctx.font = `700 ${textSizePX}px \"gg sans\", \"Noto Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`;\n  const text = document.getElementById('badge-text').value;\n\n  const metrics = ctx.measureText(text);\n  const textWidth = metrics.width;\n  const textHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n  const method = 'centering';\n  if (method === 'centering') {\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n  }\n\n  let centerX = u * imgSize;\n  centerX += offsetU * imgSize;\n  let centerY = v * imgSize;\n  centerY += offsetV * imgSize;\n\n  if (method === 'metrics') {\n    centerX -= textWidth / 2;\n    centerY += textHeight / 2;\n  }\n\n  ctx.fillText(text, centerX, centerY);\n}\n\nfunction DrawImageOverlay ({ canvas, ctx, img, imgSize, alpha }) {\n  console.log(`DrawImageOverlay().imgSize: ${imgSize}, alpha: ${alpha}, img.width: ${img.width}, img.height: ${img.height}`);\n  ctx.globalAlpha = alpha;\n  ctx.drawImage(img, 0, 0, imgSize, imgSize);\n  ctx.globalAlpha = 1;\n}\n\nfunction DrawOutlineOverlay ({ canvas, ctx, imgSize, alpha, roundness }) {\n  const offScreenCanvas = document.createElement('canvas');\n  offScreenCanvas.width = imgSize;\n  offScreenCanvas.height = imgSize;\n  const offCtx = offScreenCanvas.getContext('2d');\n\n  // Fill the background with semitransparent color\n  offCtx.fillStyle = `rgba(54, 57, 63, ${alpha})`;\n  offCtx.fillRect(0, 0, imgSize, imgSize);\n\n  // Set composite operation for transparent cut-out\n  offCtx.globalCompositeOperation = 'destination-out';\n\n  // Calculate radius for rounded corners\n  const radius = imgSize / 2 * roundness;\n  const fullCircle = roundness === 1;\n\n  if (!fullCircle) {\n    // Draw path for rounded rectangle\n    offCtx.beginPath();\n    offCtx.moveTo(radius, 0);\n    offCtx.lineTo(imgSize - radius, 0);\n    offCtx.arc(imgSize - radius, radius, radius, 1.5 * Math.PI, 2 * Math.PI);\n    offCtx.lineTo(imgSize, imgSize - radius);\n    offCtx.arc(imgSize - radius, imgSize - radius, radius, 0, 0.5 * Math.PI);\n    offCtx.lineTo(radius, imgSize);\n    offCtx.arc(radius, imgSize - radius, radius, 0.5 * Math.PI, Math.PI);\n    offCtx.lineTo(0, radius);\n    offCtx.arc(radius, radius, radius, Math.PI, 1.5 * Math.PI);\n    offCtx.closePath();\n  } else {\n    // Draw a circle for roundness = 1\n    offCtx.beginPath();\n    offCtx.arc(imgSize / 2, imgSize / 2, radius, 0, 2 * Math.PI);\n  }\n\n  offCtx.fillStyle = 'rgba(255, 255, 255, 1)';\n  offCtx.fill();\n\n  // Reset composite operation to default\n  offCtx.globalCompositeOperation = 'source-over';\n\n  ctx.drawImage(offScreenCanvas, 0, 0, imgSize, imgSize);\n}\n\nfunction SVGDrawImage ({ svg /*: SVGElement */, svgSize, img /*: Image */, u, v, fontSizeU, offsetU, offsetV, radius, border }) {\n  // Create mask:\n  const mask = document.createElementNS('http://www.w3.org/2000/svg', 'mask');\n  mask.setAttribute('id', 'image-mask');\n\n  // Mask's full-opacity rectangle:\n  const maskRect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n  maskRect.setAttribute('x', '0');\n  maskRect.setAttribute('y', '0');\n  maskRect.setAttribute('width', '100%');\n  maskRect.setAttribute('height', '100%');\n  maskRect.setAttribute('fill', 'white');\n  mask.appendChild(maskRect);\n\n  // Mask's transparent circle:\n  const maskCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n  maskCircle.setAttribute('cx', u * svgSize);\n  maskCircle.setAttribute('cy', v * svgSize);\n  maskCircle.setAttribute('r', (radius + border) * svgSize);\n  maskCircle.setAttribute('fill', 'black');\n  mask.appendChild(maskCircle);\n\n  svg.appendChild(mask);\n\n  // Draw the image with mask applied:\n  const image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n  image.setAttribute('x', '0');\n  image.setAttribute('y', '0');\n  image.setAttribute('width', '100%');\n  image.setAttribute('height', '100%');\n  image.setAttribute('href', img.src);\n  image.setAttribute('mask', 'url(#image-mask)');\n  svg.appendChild(image);\n\n  const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n  circle.setAttribute('cx', u * svgSize);\n  circle.setAttribute('cy', v * svgSize);\n  circle.setAttribute('r', radius * svgSize);\n  // Set color\n  circle.setAttribute('fill', 'red');\n  svg.appendChild(circle);\n\n  // Add number to the badge,\n  const text = document.getElementById('badge-text').value;\n\n  const textSizePX = fontSizeU * svgSize;\n\n  const textX = u * svgSize + offsetU * svgSize;\n  let textY = v * svgSize + offsetV * svgSize;\n  textY += radius / 2 * svgSize;\n\n  const textElement = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n  textElement.setAttribute('x', textX);\n  textElement.setAttribute('y', textY);\n  textElement.setAttribute('fill', 'white');\n  textElement.setAttribute('text-anchor', 'middle');\n  // textElement.setAttribute('dominant-baseline', 'middle');\n  // textElement.setAttribute('alignment-baseline', 'middle');\n  // textElement.setAttribute('alignment-baseline', 'central');\n  // textElement.setAttribute('alignment-baseline', 'mathematical ');\n  textElement.setAttribute('vertical-align', 'middle');\n\n  textElement.setAttribute('font-size', `${textSizePX}px`);\n  textElement.setAttribute('font-weight', '700');\n  textElement.setAttribute('font-family', '\"gg sans\", \"Noto Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif');\n  textElement.textContent = text;\n  svg.appendChild(textElement);\n\n  svg.style.display = 'block';\n}\n\nfunction ClearSVG ({ svg }) {\n  while (svg.firstChild) {\n    svg.removeChild(svg.firstChild);\n  }\n}\n\nfunction SVGDrawImageOverlay ({ svg, img, alpha }) {\n  const image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n  image.setAttribute('x', '0');\n  image.setAttribute('y', '0');\n\n  image.setAttribute('width', '100%');\n  image.setAttribute('height', '100%');\n  image.setAttribute('href', img.src);\n  image.setAttribute('opacity', alpha);\n  svg.appendChild(image);\n}\n\nfunction SVGDrawOutlineOverlay ({ svg, svgSize, alpha, roundness }) {\n  const mask = document.createElementNS('http://www.w3.org/2000/svg', 'mask');\n  mask.setAttribute('id', 'outline-overlay-image-mask');\n\n  // Mask's full-opacity rectangle:\n  const visibleRect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n  visibleRect.setAttribute('x', '0');\n  visibleRect.setAttribute('y', '0');\n  visibleRect.setAttribute('width', '100%');\n  visibleRect.setAttribute('height', '100%');\n  visibleRect.setAttribute('fill', 'white');\n  mask.appendChild(visibleRect);\n\n  const transparentRect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n  transparentRect.setAttribute('x', '0');\n  transparentRect.setAttribute('y', '0');\n  transparentRect.setAttribute('width', '100%');\n  transparentRect.setAttribute('height', '100%');\n  transparentRect.setAttribute('fill', 'black');\n  // Add corner radius\n  transparentRect.setAttribute('rx', `${roundness * svgSize / 2}px`);\n  transparentRect.setAttribute('ry', `${roundness * svgSize / 2}px`);\n  mask.appendChild(transparentRect);\n\n  svg.appendChild(mask);\n\n  // Draw a rect with the mask applied\n  const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n  rect.setAttribute('x', '0');\n  rect.setAttribute('y', '0');\n  rect.setAttribute('opacity', alpha);\n  rect.setAttribute('width', '100%');\n  rect.setAttribute('height', '100%');\n  rect.setAttribute('fill', 'rgba(54, 57, 63)');\n  rect.setAttribute('mask', 'url(#outline-overlay-image-mask)');\n  svg.appendChild(rect);\n}\n\nclass State {\n  constructor () {\n    this.mainImage = new Image();\n    this.overlayImage = new Image();\n    this._imageOverlayAlpha = 0.5;\n    this._outlineOverlayAlpha = 0.5;\n\n    this._outlineRoundness = 0;\n    this._u = 0;\n    this._v = 0;\n    this._normalizedRadius = 0;\n    this._normalizedBorder = 0;\n    this._badgeText = '1';\n    this._normalizedFontSize = 0;\n    this._uTextOffset = 0;\n    this._vTextOffset = 0;\n\n    this.dirty = false;\n  }\n\n  GetImageWH () {\n    return { w: this.mainImage.width, h: this.mainImage.height };\n  }\n\n  _RedrawEverything () {\n    const canvas = document.getElementById('canvas');\n    canvas.width = 256;\n    canvas.height = 256;\n    canvas.style.display = 'block';\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    DrawImage({\n      canvas,\n      ctx,\n      img: this.mainImage,\n      imgSize: 256,\n      u: this.u,\n      v: this.v,\n      fontSizeU: this.normalizedFontSize,\n      offsetU: this.uTextOffset,\n      offsetV: this.vTextOffset,\n      radiusU: this.normalizedRadius,\n      borderU: this.normalizedBorder\n    });\n\n    const canvasOverlay = document.getElementById('canvas-overlay');\n    canvasOverlay.style.display = 'block';\n\n    canvasOverlay.width = 256;\n    canvasOverlay.height = 256;\n    const ctxOverlay = canvasOverlay.getContext('2d');\n    ctxOverlay.clearRect(0, 0, canvas.width, canvas.height);\n\n    DrawImageOverlay({ canvas: canvasOverlay, ctx: ctxOverlay, img: this.overlayImage, imgSize: 256, alpha: this.imageOverlayAlpha });\n    DrawOutlineOverlay({\n      canvas: canvasOverlay,\n      ctx: ctxOverlay,\n      imgSize: 256,\n      alpha: this.outlineOverlayAlpha,\n      roundness: this.outlineRoundness\n    });\n\n    const svg = document.getElementById('svg');\n    svg.style.display = 'block';\n    svg.setAttribute('width', 256);\n    svg.setAttribute('height', 256);\n    ClearSVG({ svg });\n    SVGDrawImage({\n      svg,\n      svgSize: 256,\n      img: this.mainImage,\n      u: this.u,\n      v: this.v,\n      fontSizeU: this.normalizedFontSize,\n      offsetU: this.uTextOffset,\n      offsetV: this.vTextOffset,\n      radius: this.normalizedRadius,\n      border: this.normalizedBorder\n    });\n    const svgOverlay = document.getElementById('svg-overlay');\n    svgOverlay.style.display = 'block';\n    ClearSVG({ svg: svgOverlay });\n    SVGDrawImageOverlay({ svg: svgOverlay, img: this.overlayImage, alpha: this.imageOverlayAlpha });\n    SVGDrawOutlineOverlay({\n      svg: svgOverlay,\n      svgSize: 256,\n      alpha: this.outlineOverlayAlpha,\n      roundness: this.outlineRoundness\n    });\n\n    console.log(`_RedrawEverything().x: ${this.x}, y: ${this.y}, u: ${this.u}, v: ${this.v}`);\n\n    const mainImage = this.mainImage;\n    function SetOrDisable (id, value) {\n      if (mainImage.width === 0) {\n        document.getElementById(id).value = '0';\n        document.getElementById(id).disabled = true;\n      } else {\n        document.getElementById(id).value = value;\n        document.getElementById(id).disabled = false;\n      }\n    }\n\n    document.getElementById('image-overlay-alpha').value = this.imageOverlayAlpha;\n    document.getElementById('outline-overlay-alpha').value = this.outlineOverlayAlpha;\n\n    document.getElementById('outline-overlay-roundness').value = this.outlineRoundness;\n\n    SetOrDisable('x', this.x);\n    SetOrDisable('y', this.y);\n\n    document.getElementById('u').value = this.u;\n    document.getElementById('v').value = this.v;\n    document.getElementById('normalized-radius').value = this.normalizedRadius;\n    document.getElementById('normalized-border').value = this.normalizedBorder;\n\n    SetOrDisable('pixel-radius', this.pixelRadius);\n    SetOrDisable('pixel-border', this.pixelBorder);\n\n    document.getElementById('badge-text').value = this.badgeText;\n    document.getElementById('normalized-font-size').value = this.normalizedFontSize;\n    document.getElementById('normalized-offset-u').value = this.uTextOffset;\n    document.getElementById('normalized-offset-v').value = this.vTextOffset;\n\n    SetOrDisable('pixel-font-size', this.pixelFontSize);\n    SetOrDisable('pixel-offset-x', this.xTextOffset);\n    SetOrDisable('pixel-offset-y', this.yTextOffset);\n\n    console.log(this);\n  }\n\n  MarkDirty () {\n    if (this.dirty) {\n      return;\n    }\n    this.dirty = true;\n    // Since the image size might have changed, recompute all the computed values that depends on the image size.\n    this.u = 1.0 * this.u;\n    this.v = 1.0 * this.v;\n    this.normalizedRadius = 1.0 * (this.normalizedRadius);\n    this.normalizedBorder = 1.0 * (this.normalizedBorder);\n\n    setTimeout(() => {\n      this._RedrawEverything();\n      this.dirty = false;\n    }, 0);\n  }\n\n  set imageOverlayAlpha (value) {\n    this._imageOverlayAlpha = value;\n  }\n\n  get imageOverlayAlpha () {\n    return this._imageOverlayAlpha;\n  }\n\n  set outlineOverlayAlpha (value) {\n    this._outlineOverlayAlpha = value;\n  }\n\n  get outlineOverlayAlpha () {\n    return this._outlineOverlayAlpha;\n  }\n\n  set outlineRoundness (value) {\n    this._outlineRoundness = value;\n  }\n\n  get outlineRoundness () {\n    return this._outlineRoundness;\n  }\n\n  set x (value) {\n    this._u = value / this.GetImageWH().w;\n  }\n\n  get x () {\n    return this._u * this.GetImageWH().w;\n  }\n\n  set y (value) {\n    this._v = value / this.GetImageWH().h;\n  }\n\n  get y () {\n    return this._v * this.GetImageWH().h;\n  }\n\n  set u (value) {\n    this._u = value;\n  }\n\n  get u () {\n    return this._u;\n  }\n\n  set v (value) {\n    this._v = value;\n  }\n\n  get v () {\n    return this._v;\n  }\n\n  set pixelRadius (value) {\n    this._normalizedRadius = value / this.GetImageWH().w;\n  }\n\n  get pixelRadius () {\n    return this._normalizedRadius * this.GetImageWH().w;\n  }\n\n  set normalizedRadius (value) {\n    this._normalizedRadius = value;\n  }\n\n  get normalizedRadius () {\n    return this._normalizedRadius;\n  }\n\n  set pixelBorder (value) {\n    this._normalizedBorder = value / this.GetImageWH().w;\n  }\n\n  get pixelBorder () {\n    return this._normalizedBorder * this.GetImageWH().w;\n  }\n\n  set normalizedBorder (value) {\n    this._normalizedBorder = value;\n  }\n\n  get normalizedBorder () {\n    return this._normalizedBorder;\n  }\n\n  set badgeText (value) {\n    this._badgeText = value;\n  }\n\n  get badgeText () {\n    return this._badgeText;\n  }\n\n  set normalizedFontSize (value) {\n    this._normalizedFontSize = value;\n  }\n\n  get normalizedFontSize () {\n    return this._normalizedFontSize;\n  }\n\n  set pixelFontSize (value) {\n    this._normalizedFontSize = value / this.GetImageWH().w;\n  }\n\n  get pixelFontSize () {\n    return this._normalizedFontSize * this.GetImageWH().w;\n  }\n\n  set uTextOffset (value) {\n    this._uTextOffset = value;\n  }\n\n  get uTextOffset () {\n    return this._uTextOffset;\n  }\n\n  set xTextOffset (value) {\n    this._uTextOffset = value / this.GetImageWH().w;\n  }\n\n  get xTextOffset () {\n    return this._uTextOffset * this.GetImageWH().w;\n  }\n\n  set vTextOffset (value) {\n    this._vTextOffset = value;\n  }\n\n  get vTextOffset () {\n    return this._vTextOffset;\n  }\n\n  set yTextOffset (value) {\n    this._vTextOffset = value / this.GetImageWH().h;\n  }\n\n  get yTextOffset () {\n    return this._vTextOffset * this.GetImageWH().h;\n  }\n}\n\nasync function LoadBlobAsImage (blob) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n\n    function handleLoad () {\n      img.removeEventListener('load', handleLoad);\n      img.removeEventListener('error', handleError);\n      resolve(img);\n    }\n\n    function handleError (error) {\n      img.removeEventListener('load', handleLoad);\n      img.removeEventListener('error', handleError);\n      reject(error);\n    }\n\n    img.addEventListener('load', handleLoad);\n    img.addEventListener('error', handleError);\n\n    img.src = URL.createObjectURL(blob);\n  });\n}\n\nasync function LoadImageAsBlob (image/* Image */) {\n  return new Promise((resolve, reject) => {\n    // Define the processImage function to be used in the load event listener\n    const processImage = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = image.width;\n      canvas.height = image.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n      canvas.toBlob(blob => {\n        resolve(blob);\n      }, 'image/png');\n\n      // Clean up: Remove the event listener after processing the image\n      image.removeEventListener('load', processImage);\n      image.removeEventListener('error', handleError);\n    };\n\n    // Define the handleError function to be used in the error event listener\n    const handleError = (error) => {\n      reject(error);\n      // Clean up: Remove the event listener if there's an error\n      image.removeEventListener('load', processImage);\n      image.removeEventListener('error', handleError);\n    };\n\n    if (image.complete && image.naturalHeight !== 0) {\n      // If the image is already loaded, process it immediately\n      processImage();\n    } else {\n      // If the image is not yet loaded, wait for it to load\n      image.addEventListener('load', processImage);\n      image.addEventListener('error', handleError);\n    }\n  });\n}\n\n/// /////////////////////////////////////////////////////////////////////////////\n\nwindow.badgerState = new State();\n\n/// /////////////////////////////////////////////////////////////////////////////\n\ndocument.getElementById('upload-image').addEventListener('change', function (e) {\n  const reader = new FileReader();\n  reader.onload = function (event) {\n    window.badgerState.mainImage = new Image();\n    window.badgerState.mainImage.onload = function () {\n      window.badgerState.MarkDirty();\n    };\n    window.badgerState.mainImage.src = event.target.result;\n  };\n  reader.readAsDataURL(e.target.files[0]);\n});\n\ndocument.getElementById('upload-image-overlay').addEventListener('change', function (e) {\n  window.badgerState.overlayImage = new Image();\n  const reader = new FileReader();\n  reader.onload = function (event) {\n    window.badgerState.overlayImage = new Image();\n\n    window.badgerState.overlayImage.onload = function () {\n      window.badgerState.MarkDirty();\n    };\n    window.badgerState.overlayImage.src = event.target.result;\n  };\n  reader.readAsDataURL(e.target.files[0]);\n});\n\ndocument.getElementById('download-image').addEventListener('click', function (e) {\n  const canvas = document.getElementById('canvas');\n  const image = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream');\n  const link = document.createElement('a');\n  link.download = 'badger-badger-pfp.png';\n  link.href = image;\n  link.click();\n});\n\ndocument.getElementById('download-svg').addEventListener('click', function (e) {\n  const svg = document.getElementById('svg');\n  const svgData = new XMLSerializer().serializeToString(svg);\n  const blob = new Blob([svgData], { type: 'image/svg+xml' });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.download = 'badger-badger-pfp.svg';\n  link.href = url;\n  link.click();\n  URL.revokeObjectURL(url);\n});\n\ndocument.getElementById('download-svg-as-png').addEventListener('click', function (e) {\n  const svg = document.getElementById('svg');\n  const svgData = new XMLSerializer().serializeToString(svg);\n  const canvas = document.createElement('canvas');\n  canvas.width = 256;\n  canvas.height = 256;\n  const ctx = canvas.getContext('2d');\n  const img = new Image();\n  img.onload = function () {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    const image = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream');\n    const link = document.createElement('a');\n    link.download = 'badger-badger-pfp-svg.png';\n    link.href = image;\n    link.click();\n  };\n  img.src = 'data:image/svg+xml;base64,' + btoa(svgData);\n});\n\n/// /////////////////////////////////////////////////////////////////////////////\n\nfor (const eventName of ['input', 'change']) {\n  document.getElementById('image-overlay-alpha').addEventListener(eventName, function (e) {\n    window.badgerState.imageOverlayAlpha = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n  document.getElementById('outline-overlay-alpha').addEventListener(eventName, function (e) {\n    window.badgerState.outlineOverlayAlpha = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('outline-overlay-roundness').addEventListener(eventName, function (e) {\n    window.badgerState.outlineRoundness = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n  document.getElementById('x').addEventListener(eventName, function (e) {\n    window.badgerState.x = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('y').addEventListener(eventName, function (e) {\n    window.badgerState.y = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('u').addEventListener(eventName, function (e) {\n    window.badgerState.u = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('v').addEventListener(eventName, function (e) {\n    window.badgerState.v = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('pixel-radius').addEventListener(eventName, function (e) {\n    window.badgerState.pixelRadius = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('normalized-radius').addEventListener(eventName, function (e) {\n    window.badgerState.normalizedRadius = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('pixel-border').addEventListener(eventName, function (e) {\n    window.badgerState.pixelBorder = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('normalized-border').addEventListener(eventName, function (e) {\n    window.badgerState.normalizedBorder = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('badge-text').addEventListener(eventName, function (e) {\n    window.badgerState.badgeText = e.target.value;\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('pixel-font-size').addEventListener(eventName, function (e) {\n    window.badgerState.pixelFontSize = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('normalized-font-size').addEventListener(eventName, function (e) {\n    window.badgerState.normalizedFontSize = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('pixel-offset-x').addEventListener(eventName, function (e) {\n    window.badgerState.xTextOffset = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('normalized-offset-u').addEventListener(eventName, function (e) {\n    window.badgerState.uTextOffset = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('pixel-offset-y').addEventListener(eventName, function (e) {\n    window.badgerState.yTextOffset = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n\n  document.getElementById('normalized-offset-v').addEventListener(eventName, function (e) {\n    window.badgerState.vTextOffset = parseFloat(e.target.value);\n    window.badgerState.MarkDirty();\n  });\n}\n/// /////////////////////////////////////////////////////////////////////////////\ndocument.getElementById('outline-overlay-roundness-server-default').addEventListener('click', function (e) {\n  window.badgerState.outlineRoundness = 0.66;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('outline-overlay-roundness-user-default').addEventListener('click', function (e) {\n  window.badgerState.outlineRoundness = 1;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('outline-overlay-roundness-clear').addEventListener('click', function (e) {\n  window.badgerState.outlineRoundness = 0;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('lower-right').addEventListener('click', function (e) {\n  window.badgerState.u = 1 - (21.25 / 128);\n  window.badgerState.v = 1 - (21 / 128);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('lower-left').addEventListener('click', function (e) {\n  window.badgerState.u = (21.25 / 128);\n  window.badgerState.v = 1 - (21 / 128);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('upper-left').addEventListener('click', function (e) {\n  window.badgerState.u = (21.25 / 128);\n  window.badgerState.v = (21 / 128);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('upper-right').addEventListener('click', function (e) {\n  window.badgerState.u = 1 - (21.25 / 128);\n  window.badgerState.v = (21 / 128);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('lower-right-inner').addEventListener('click', function (e) {\n  window.badgerState.u = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n  window.badgerState.v = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('lower-left-inner').addEventListener('click', function (e) {\n  window.badgerState.u = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n  window.badgerState.v = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('upper-left-inner').addEventListener('click', function (e) {\n  window.badgerState.u = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n  window.badgerState.v = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('upper-right-inner').addEventListener('click', function (e) {\n  window.badgerState.u = 0.5 + Math.sqrt(2) / 4 - window.badgerState.normalizedRadius;\n  window.badgerState.v = 0.5 - Math.sqrt(2) / 4 + window.badgerState.normalizedRadius;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('default-radius').addEventListener('click', function (e) {\n  window.badgerState.normalizedRadius = (21 / 128);\n  window.badgerState.normalizedBorder = (32 / 128) - (21 / 128);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('default-contents').addEventListener('click', function (e) {\n  window.badgerState.normalizedFontSize = (30 / 128);\n  window.badgerState.badgeText = '1';\n  window.badgerState.uTextOffset = 0;\n  window.badgerState.vTextOffset = 0;\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('sample-pfp').addEventListener('click', async function (e) {\n  const blob = await LoadImageAsBlob(document.getElementById('sample-pfp-image'));\n  window.badgerState.mainImage = await LoadBlobAsImage(blob);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('clear-pfp').addEventListener('click', async function (e) {\n  window.badgerState.mainImage = new Image();\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('sample-pfp-overlay').addEventListener('click', async function (e) {\n  const blob = await LoadImageAsBlob(document.getElementById('sample-pfp-overlay-image'));\n  window.badgerState.overlayImage = await LoadBlobAsImage(blob);\n  window.badgerState.MarkDirty();\n});\n\ndocument.getElementById('clear-pfp-overlay').addEventListener('click', async function (e) {\n  window.badgerState.overlayImage = new Image();\n  window.badgerState.MarkDirty();\n});\n\n/// /////////////////////////////////////////////////////////////////////////////\ndocument.getElementById('lower-right').click();\ndocument.getElementById('default-radius').click();\ndocument.getElementById('default-contents').click();\n"],"names":["ClearSVG","svg","firstChild","removeChild","LoadBlobAsImage","blob","Promise","resolve","reject","img","Image","handleLoad","removeEventListener","handleError","error","addEventListener","src","URL","createObjectURL","LoadImageAsBlob","image","processImage","canvas","document","createElement","width","height","ctx","getContext","drawImage","toBlob","complete","naturalHeight","eventName","window","badgerState","constructor","mainImage","overlayImage","_imageOverlayAlpha","_outlineOverlayAlpha","_outlineRoundness","_u","_v","_normalizedRadius","_normalizedBorder","_badgeText","_normalizedFontSize","_uTextOffset","_vTextOffset","dirty","GetImageWH","w","h","_RedrawEverything","getElementById","style","display","clearRect","DrawImage","imgSize","u","v","radiusU","borderU","fontSizeU","offsetU","offsetV","ClearCircle","x","y","radius","globalCompositeOperation","beginPath","arc","Math","PI","fill","FillCircle","color","console","log","fillStyle","font","text","value","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","textAlign","textBaseline","centerX","centerY","fillText","normalizedFontSize","uTextOffset","vTextOffset","normalizedRadius","normalizedBorder","canvasOverlay","ctxOverlay","DrawImageOverlay","alpha","globalAlpha","imageOverlayAlpha","DrawOutlineOverlay","roundness","offScreenCanvas","offCtx","fillRect","moveTo","lineTo","closePath","outlineOverlayAlpha","outlineRoundness","setAttribute","SVGDrawImage","svgSize","border","mask","createElementNS","maskRect","appendChild","maskCircle","circle","textY","textElement","textContent","svgOverlay","SVGDrawImageOverlay","SVGDrawOutlineOverlay","visibleRect","transparentRect","rect","SetOrDisable","id","disabled","pixelRadius","pixelBorder","badgeText","pixelFontSize","xTextOffset","yTextOffset","MarkDirty","setTimeout","e","reader","FileReader","onload","event","target","result","readAsDataURL","files","toDataURL","replace","link","download","href","click","svgData","XMLSerializer","serializeToString","Blob","type","url","revokeObjectURL","btoa","parseFloat","sqrt","textSizePX","textWidth","textHeight","method","fullCircle","textX","State"],"version":3,"file":"index.eb952d2d.js.map"}